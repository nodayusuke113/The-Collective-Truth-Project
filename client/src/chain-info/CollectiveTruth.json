{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "assetContracts",
      "outputs": [
        {
          "internalType": "contract Asset",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "assetContractsMap",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_imageURL",
          "type": "string"
        },
        {
          "internalType": "enum CATEGORY",
          "name": "_category",
          "type": "uint8"
        }
      ],
      "name": "createAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        }
      ],
      "name": "getAssetContractsMap",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getTokenBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getUsers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_initialTokens",
          "type": "uint256"
        }
      ],
      "name": "registerUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "flag",
          "type": "bool"
        }
      ],
      "name": "setUsers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "truthTokens",
      "outputs": [
        {
          "internalType": "contract TruthToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "3": "contracts/Asset.sol",
    "4": "contracts/CollectiveTruth.sol",
    "6": "contracts/TruthToken.sol"
  },
  "ast": {
    "absolutePath": "contracts/CollectiveTruth.sol",
    "exportedSymbols": {
      "Asset": [
        735
      ],
      "CATEGORY": [
        369
      ],
      "CollectiveTruth": [
        901
      ],
      "Comment": [
        353
      ],
      "Context": [
        1525
      ],
      "Data": [
        384
      ],
      "ERC20": [
        1424
      ],
      "IERC20": [
        1502
      ],
      "Rating": [
        365
      ],
      "TruthToken": [
        923
      ],
      "VOTE": [
        356
      ]
    },
    "id": 902,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 737,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".6",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:31:4"
      },
      {
        "absolutePath": "contracts/Asset.sol",
        "file": "./Asset.sol",
        "id": 738,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 902,
        "sourceUnit": 736,
        "src": "74:21:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/TruthToken.sol",
        "file": "./TruthToken.sol",
        "id": 739,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 902,
        "sourceUnit": 924,
        "src": "97:26:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "CollectiveTruth",
        "contractDependencies": [
          735,
          923
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 901,
        "linearizedBaseContracts": [
          901
        ],
        "name": "CollectiveTruth",
        "nameLocation": "136:15:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8e5fa1db",
            "id": 743,
            "mutability": "mutable",
            "name": "assetContracts",
            "nameLocation": "174:14:4",
            "nodeType": "VariableDeclaration",
            "scope": 901,
            "src": "159:29:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_Asset_$735_$dyn_storage",
              "typeString": "contract Asset[]"
            },
            "typeName": {
              "baseType": {
                "id": 741,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 740,
                  "name": "Asset",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 735,
                  "src": "159:5:4"
                },
                "referencedDeclaration": 735,
                "src": "159:5:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Asset_$735",
                  "typeString": "contract Asset"
                }
              },
              "id": 742,
              "nodeType": "ArrayTypeName",
              "src": "159:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_Asset_$735_$dyn_storage_ptr",
                "typeString": "contract Asset[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5123fa4a",
            "id": 747,
            "mutability": "mutable",
            "name": "assetContractsMap",
            "nameLocation": "230:17:4",
            "nodeType": "VariableDeclaration",
            "scope": 901,
            "src": "195:52:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 746,
              "keyType": {
                "id": 744,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "203:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "195:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 745,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "214:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3e302c83",
            "id": 750,
            "mutability": "mutable",
            "name": "truthTokens",
            "nameLocation": "272:11:4",
            "nodeType": "VariableDeclaration",
            "scope": 901,
            "src": "254:29:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TruthToken_$923",
              "typeString": "contract TruthToken"
            },
            "typeName": {
              "id": 749,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 748,
                "name": "TruthToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 923,
                "src": "254:10:4"
              },
              "referencedDeclaration": 923,
              "src": "254:10:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TruthToken_$923",
                "typeString": "contract TruthToken"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a87430ba",
            "id": 754,
            "mutability": "mutable",
            "name": "users",
            "nameLocation": "322:5:4",
            "nodeType": "VariableDeclaration",
            "scope": 901,
            "src": "290:37:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 753,
              "keyType": {
                "id": 751,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "298:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "290:24:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 752,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "309:4:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 769,
              "nodeType": "Block",
              "src": "411:65:4",
              "statements": [
                {
                  "expression": {
                    "id": 767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 757,
                      "name": "truthTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 750,
                      "src": "422:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TruthToken_$923",
                        "typeString": "contract TruthToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_1614317000000000000000000_by_1",
                            "typeString": "int_const 1614317000000000000000000"
                          },
                          "id": 765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31363134333137",
                            "id": 761,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "451:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1614317_by_1",
                              "typeString": "int_const 1614317"
                            },
                            "value": "1614317"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "id": 764,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 762,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "461:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3138",
                              "id": 763,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "465:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_18_by_1",
                                "typeString": "int_const 18"
                              },
                              "value": "18"
                            },
                            "src": "461:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            }
                          },
                          "src": "451:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1614317000000000000000000_by_1",
                            "typeString": "int_const 1614317000000000000000000"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1614317000000000000000000_by_1",
                            "typeString": "int_const 1614317000000000000000000"
                          }
                        ],
                        "id": 760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "436:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$returns$_t_contract$_TruthToken_$923_$",
                          "typeString": "function (uint256) returns (contract TruthToken)"
                        },
                        "typeName": {
                          "id": 759,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 758,
                            "name": "TruthToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 923,
                            "src": "440:10:4"
                          },
                          "referencedDeclaration": 923,
                          "src": "440:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TruthToken_$923",
                            "typeString": "contract TruthToken"
                          }
                        }
                      },
                      "id": 766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "436:32:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TruthToken_$923",
                        "typeString": "contract TruthToken"
                      }
                    },
                    "src": "422:46:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TruthToken_$923",
                      "typeString": "contract TruthToken"
                    }
                  },
                  "id": 768,
                  "nodeType": "ExpressionStatement",
                  "src": "422:46:4"
                }
              ]
            },
            "id": 770,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 755,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "408:2:4"
            },
            "returnParameters": {
              "id": 756,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "411:0:4"
            },
            "scope": 901,
            "src": "397:79:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 783,
              "nodeType": "Block",
              "src": "538:41:4",
              "statements": [
                {
                  "expression": {
                    "id": 781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 777,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 754,
                        "src": "549:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 779,
                      "indexExpression": {
                        "id": 778,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 772,
                        "src": "555:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "549:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 780,
                      "name": "flag",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 774,
                      "src": "567:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "549:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 782,
                  "nodeType": "ExpressionStatement",
                  "src": "549:22:4"
                }
              ]
            },
            "functionSelector": "7bc4099a",
            "id": 784,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUsers",
            "nameLocation": "493:8:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 772,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "510:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 784,
                  "src": "502:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 771,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "502:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 774,
                  "mutability": "mutable",
                  "name": "flag",
                  "nameLocation": "525:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 784,
                  "src": "520:9:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 773,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "520:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "501:29:4"
            },
            "returnParameters": {
              "id": 776,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "538:0:4"
            },
            "scope": 901,
            "src": "484:95:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 795,
              "nodeType": "Block",
              "src": "650:41:4",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 791,
                      "name": "users",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 754,
                      "src": "668:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 793,
                    "indexExpression": {
                      "id": 792,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 786,
                      "src": "674:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "668:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 790,
                  "id": 794,
                  "nodeType": "Return",
                  "src": "661:22:4"
                }
              ]
            },
            "functionSelector": "602b386e",
            "id": 796,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUsers",
            "nameLocation": "596:8:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 786,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "613:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 796,
                  "src": "605:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 785,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "605:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "604:18:4"
            },
            "returnParameters": {
              "id": 790,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 789,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 796,
                  "src": "644:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 788,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "644:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "643:6:4"
            },
            "scope": 901,
            "src": "587:104:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 816,
              "nodeType": "Block",
              "src": "769:106:4",
              "statements": [
                {
                  "expression": {
                    "id": 807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 803,
                        "name": "users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 754,
                        "src": "788:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 805,
                      "indexExpression": {
                        "id": 804,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 798,
                        "src": "794:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "788:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "806:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "788:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 808,
                  "nodeType": "ExpressionStatement",
                  "src": "788:22:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 812,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 798,
                        "src": "842:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 813,
                        "name": "_initialTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 800,
                        "src": "852:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 809,
                        "name": "truthTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 750,
                        "src": "821:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TruthToken_$923",
                          "typeString": "contract TruthToken"
                        }
                      },
                      "id": 811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1037,
                      "src": "821:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "821:46:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 815,
                  "nodeType": "ExpressionStatement",
                  "src": "821:46:4"
                }
              ]
            },
            "functionSelector": "fa0b5e55",
            "id": 817,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerUser",
            "nameLocation": "708:12:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 798,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "729:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "721:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 797,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "721:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 800,
                  "mutability": "mutable",
                  "name": "_initialTokens",
                  "nameLocation": "746:14:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "738:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 799,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "738:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "720:41:4"
            },
            "returnParameters": {
              "id": 802,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "769:0:4"
            },
            "scope": 901,
            "src": "699:176:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 859,
              "nodeType": "Block",
              "src": "1071:278:4",
              "statements": [
                {
                  "assignments": [
                    833
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 833,
                      "mutability": "mutable",
                      "name": "newContract",
                      "nameLocation": "1088:11:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 859,
                      "src": "1082:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Asset_$735",
                        "typeString": "contract Asset"
                      },
                      "typeName": {
                        "id": 832,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 831,
                          "name": "Asset",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 735,
                          "src": "1082:5:4"
                        },
                        "referencedDeclaration": 735,
                        "src": "1082:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Asset_$735",
                          "typeString": "contract Asset"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 843,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 837,
                        "name": "_contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 819,
                        "src": "1126:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 838,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 821,
                        "src": "1150:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 839,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 823,
                        "src": "1170:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 840,
                        "name": "_imageURL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 825,
                        "src": "1192:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 841,
                        "name": "_category",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 828,
                        "src": "1216:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CATEGORY_$369",
                          "typeString": "enum CATEGORY"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_enum$_CATEGORY_$369",
                          "typeString": "enum CATEGORY"
                        }
                      ],
                      "id": 836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1102:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_enum$_CATEGORY_$369_$returns$_t_contract$_Asset_$735_$",
                        "typeString": "function (address,string memory,string memory,string memory,enum CATEGORY) returns (contract Asset)"
                      },
                      "typeName": {
                        "id": 835,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 834,
                          "name": "Asset",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 735,
                          "src": "1106:5:4"
                        },
                        "referencedDeclaration": 735,
                        "src": "1106:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Asset_$735",
                          "typeString": "contract Asset"
                        }
                      }
                    },
                    "id": 842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1102:134:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Asset_$735",
                      "typeString": "contract Asset"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1082:154:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 847,
                        "name": "newContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 833,
                        "src": "1267:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Asset_$735",
                          "typeString": "contract Asset"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Asset_$735",
                          "typeString": "contract Asset"
                        }
                      ],
                      "expression": {
                        "id": 844,
                        "name": "assetContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 743,
                        "src": "1247:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_Asset_$735_$dyn_storage",
                          "typeString": "contract Asset[] storage ref"
                        }
                      },
                      "id": 846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1247:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_Asset_$735_$dyn_storage_ptr_$_t_contract$_Asset_$735_$returns$__$bound_to$_t_array$_t_contract$_Asset_$735_$dyn_storage_ptr_$",
                        "typeString": "function (contract Asset[] storage pointer,contract Asset)"
                      }
                    },
                    "id": 848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1247:32:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 849,
                  "nodeType": "ExpressionStatement",
                  "src": "1247:32:4"
                },
                {
                  "expression": {
                    "id": 857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 850,
                        "name": "assetContractsMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 747,
                        "src": "1290:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 852,
                      "indexExpression": {
                        "id": 851,
                        "name": "_contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 819,
                        "src": "1308:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1290:28:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 855,
                          "name": "newContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 833,
                          "src": "1329:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Asset_$735",
                            "typeString": "contract Asset"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Asset_$735",
                            "typeString": "contract Asset"
                          }
                        ],
                        "id": 854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1321:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 853,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1321:7:4",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1321:20:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1290:51:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 858,
                  "nodeType": "ExpressionStatement",
                  "src": "1290:51:4"
                }
              ]
            },
            "functionSelector": "e7b7043e",
            "id": 860,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createAsset",
            "nameLocation": "892:11:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 819,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nameLocation": "922:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 860,
                  "src": "914:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 818,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "914:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 821,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "956:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 860,
                  "src": "942:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 820,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "942:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 823,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "986:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 860,
                  "src": "972:21:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 822,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "972:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 825,
                  "mutability": "mutable",
                  "name": "_imageURL",
                  "nameLocation": "1018:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 860,
                  "src": "1004:23:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 824,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1004:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 828,
                  "mutability": "mutable",
                  "name": "_category",
                  "nameLocation": "1047:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 860,
                  "src": "1038:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_CATEGORY_$369",
                    "typeString": "enum CATEGORY"
                  },
                  "typeName": {
                    "id": 827,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 826,
                      "name": "CATEGORY",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 369,
                      "src": "1038:8:4"
                    },
                    "referencedDeclaration": 369,
                    "src": "1038:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_CATEGORY_$369",
                      "typeString": "enum CATEGORY"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "903:160:4"
            },
            "returnParameters": {
              "id": 830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1071:0:4"
            },
            "scope": 901,
            "src": "883:466:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 871,
              "nodeType": "Block",
              "src": "1468:54:4",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 867,
                      "name": "assetContractsMap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 747,
                      "src": "1486:17:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 869,
                    "indexExpression": {
                      "id": 868,
                      "name": "_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 862,
                      "src": "1504:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1486:28:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 866,
                  "id": 870,
                  "nodeType": "Return",
                  "src": "1479:35:4"
                }
              ]
            },
            "functionSelector": "8d915f58",
            "id": 872,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAssetContractsMap",
            "nameLocation": "1366:20:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 862,
                  "mutability": "mutable",
                  "name": "_contract",
                  "nameLocation": "1395:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 872,
                  "src": "1387:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 861,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1387:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1386:19:4"
            },
            "returnParameters": {
              "id": 866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 865,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 872,
                  "src": "1454:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 864,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1454:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1453:9:4"
            },
            "scope": 901,
            "src": "1357:165:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 886,
              "nodeType": "Block",
              "src": "1591:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 882,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 874,
                        "src": "1623:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 883,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 876,
                        "src": "1628:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 879,
                        "name": "truthTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 750,
                        "src": "1602:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TruthToken_$923",
                          "typeString": "contract TruthToken"
                        }
                      },
                      "id": 881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1037,
                      "src": "1602:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1602:34:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 885,
                  "nodeType": "ExpressionStatement",
                  "src": "1602:34:4"
                }
              ]
            },
            "functionSelector": "bec3fa17",
            "id": 887,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferTokens",
            "nameLocation": "1539:14:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 874,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1562:3:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 887,
                  "src": "1554:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 873,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1554:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 876,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1575:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 887,
                  "src": "1567:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 875,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1567:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1553:30:4"
            },
            "returnParameters": {
              "id": 878,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1591:0:4"
            },
            "scope": 901,
            "src": "1530:114:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 899,
              "nodeType": "Block",
              "src": "1723:55:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 896,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 889,
                        "src": "1763:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 894,
                        "name": "truthTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 750,
                        "src": "1741:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TruthToken_$923",
                          "typeString": "contract TruthToken"
                        }
                      },
                      "id": 895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1016,
                      "src": "1741:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1741:29:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 893,
                  "id": 898,
                  "nodeType": "Return",
                  "src": "1734:36:4"
                }
              ]
            },
            "functionSelector": "3aecd0e3",
            "id": 900,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenBalance",
            "nameLocation": "1661:15:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 890,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 889,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1685:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 900,
                  "src": "1677:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 888,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1677:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1676:16:4"
            },
            "returnParameters": {
              "id": 893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 892,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 900,
                  "src": "1714:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 891,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1714:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1713:9:4"
            },
            "scope": 901,
            "src": "1652:126:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 902,
        "src": "127:1654:4",
        "usedErrors": []
      }
    ],
    "src": "39:1744:4"
  },
  "bytecode": "608060405234801561001057600080fd5b506a0155d84cc7d1f7db94000060405161002990610071565b908152602001604051809103906000f08015801561004b573d6000803e3d6000fd5b50600280546001600160a01b0319166001600160a01b039290921691909117905561007e565b610bc980611cbe83390190565b611c318061008d6000396000f3fe60806040523480156200001157600080fd5b5060043610620000b75760003560e01c80638d915f58116200007a5780638d915f5814620001bd5780638e5fa1db14620001ec578063a87430ba1462000203578063bec3fa171462000229578063e7b7043e1462000240578063fa0b5e55146200025757600080fd5b80633aecd0e314620000bc5780633e302c8314620000e65780635123fa4a1462000113578063602b386e146200013f5780637bc4099a146200017f575b600080fd5b620000d3620000cd366004620004c0565b6200026e565b6040519081526020015b60405180910390f35b600254620000fa906001600160a01b031681565b6040516001600160a01b039091168152602001620000dd565b620000fa62000124366004620004c0565b6001602052600090815260409020546001600160a01b031681565b6200016e62000150366004620004c0565b6001600160a01b031660009081526003602052604090205460ff1690565b6040519015158152602001620000dd565b620001bb62000190366004620004f7565b6001600160a01b03919091166000908152600360205260409020805460ff1916911515919091179055565b005b620000fa620001ce366004620004c0565b6001600160a01b039081166000908152600160205260409020541690565b620000fa620001fd36600462000533565b620002e6565b6200016e62000214366004620004c0565b60036020526000908152604090205460ff1681565b620001bb6200023a3660046200054d565b62000311565b620001bb6200025136600462000625565b62000391565b620001bb620002683660046200054d565b6200043e565b6002546040516370a0823160e01b81526001600160a01b03838116600483015260009216906370a0823190602401602060405180830381865afa158015620002ba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002e09190620006e4565b92915050565b60008181548110620002f757600080fd5b6000918252602090912001546001600160a01b0316905081565b60025460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb906044015b6020604051808303816000875af115801562000366573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200038c9190620006fe565b505050565b60008585858585604051620003a69062000495565b620003b69594939291906200076e565b604051809103906000f080158015620003d3573d6000803e3d6000fd5b5060008054600181810183557f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56390910180546001600160a01b039485166001600160a01b03199182168117909255999093168252602052604090208054909716179095555050505050565b6001600160a01b0382811660008181526003602052604090819020805460ff19166001179055600254905163a9059cbb60e01b81526004810192909252602482018490529091169063a9059cbb9060440162000346565b61140b80620007f183390190565b80356001600160a01b0381168114620004bb57600080fd5b919050565b600060208284031215620004d357600080fd5b620004de82620004a3565b9392505050565b8015158114620004f457600080fd5b50565b600080604083850312156200050b57600080fd5b6200051683620004a3565b915060208301356200052881620004e5565b809150509250929050565b6000602082840312156200054657600080fd5b5035919050565b600080604083850312156200056157600080fd5b6200056c83620004a3565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620005a257600080fd5b813567ffffffffffffffff80821115620005c057620005c06200057a565b604051601f8301601f19908116603f01168101908282118183101715620005eb57620005eb6200057a565b816040528381528660208588010111156200060557600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a086880312156200063e57600080fd5b6200064986620004a3565b9450602086013567ffffffffffffffff808211156200066757600080fd5b6200067589838a0162000590565b955060408801359150808211156200068c57600080fd5b6200069a89838a0162000590565b94506060880135915080821115620006b157600080fd5b50620006c08882890162000590565b925050608086013560038110620006d657600080fd5b809150509295509295909350565b600060208284031215620006f757600080fd5b5051919050565b6000602082840312156200071157600080fd5b8151620004de81620004e5565b6000815180845260005b81811015620007465760208185018101518683018201520162000728565b8181111562000759576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b038616815260a06020820181905260009062000794908301876200071e565b8281036040840152620007a881876200071e565b90508281036060840152620007be81866200071e565b91505060038310620007e057634e487b7160e01b600052602160045260246000fd5b826080830152969550505050505056fe60806040523480156200001157600080fd5b506040516200140b3803806200140b833981016040819052620000349162000236565b600080546001600160a01b0319166001600160a01b038716179055835162000064906001906020870190620000c3565b5082516200007a906002906020860190620000c3565b50815162000090906003906020850190620000c3565b506004805482919060ff19166001836002811115620000b357620000b362000302565b0217905550505050505062000355565b828054620000d19062000318565b90600052602060002090601f016020900481019282620000f5576000855562000140565b82601f106200011057805160ff191683800117855562000140565b8280016001018555821562000140579182015b828111156200014057825182559160200191906001019062000123565b506200014e92915062000152565b5090565b5b808211156200014e576000815560010162000153565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200019157600080fd5b81516001600160401b0380821115620001ae57620001ae62000169565b604051601f8301601f19908116603f01168101908282118183101715620001d957620001d962000169565b81604052838152602092508683858801011115620001f657600080fd5b600091505b838210156200021a5785820183015181830184015290820190620001fb565b838211156200022c5760008385830101525b9695505050505050565b600080600080600060a086880312156200024f57600080fd5b85516001600160a01b03811681146200026757600080fd5b60208701519095506001600160401b03808211156200028557600080fd5b6200029389838a016200017f565b95506040880151915080821115620002aa57600080fd5b620002b889838a016200017f565b94506060880151915080821115620002cf57600080fd5b50620002de888289016200017f565b925050608086015160038110620002f457600080fd5b809150509295509295909350565b634e487b7160e01b600052602160045260246000fd5b600181811c908216806200032d57607f821691505b602082108114156200034f57634e487b7160e01b600052602260045260246000fd5b50919050565b6110a680620003656000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638ebb4c15116100715780638ebb4c151461017557806391f3410c1461019857806395d89b41146101ad578063b90497e0146101b5578063d917f76a146101bd578063ef430aa6146101d057600080fd5b806306fdde03146100b95780631ba46cfd146100d757806360e77b9e1461010257806373d4a13a1461011757806380f474f61461012c5780638211082714610162575b600080fd5b6100c16101ea565b6040516100ce9190610c20565b60405180910390f35b6000546100ea906001600160a01b031681565b6040516001600160a01b0390911681526020016100ce565b610115610110366004610c56565b610278565b005b61011f6103d2565b6040516100ce9190610cc7565b6005546006546007546008546101429392919084565b6040805194855260208501939093529183015260608201526080016100ce565b610115610170366004610d7f565b610600565b610188610183366004610dc3565b610751565b6040516100ce9493929190610ddc565b6101a061081f565b6040516100ce9190610e13565b6100c161093a565b6100c1610947565b6101156101cb366004610ebf565b610954565b6004546101dd9060ff1681565b6040516100ce9190610f81565b600180546101f790610f95565b80601f016020809104026020016040519081016040528092919081815260200182805461022390610f95565b80156102705780601f1061024557610100808354040283529160200191610270565b820191906000526020600020905b81548152906001019060200180831161025357829003601f168201915b505050505081565b6001600160a01b0384166000908152600a6020526040902054849060ff16156102e85760405162461bcd60e51b815260206004820152601960248201527f596f752063616e206f6e6c792072617465206f6e63652121210000000000000060448201526064015b60405180910390fd5b6001600160a01b0381166000908152600a60205260409020805460ff1916600117905560095460065461031c908683610a8e565b60065560075461032d908583610a8e565b60075560085461033e908483610a8e565b60085560006003846103508789610fe6565b61035a9190610fe6565b6103649190610ffe565b90506103766005600001548284610a8e565b6005555050600980546001810182556000919091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b0319166001600160a01b03969096169590951790945550505050565b6103da610ac2565b6040805160c08101909152600080546001600160a01b031682526001805491929160208301919061040a90610f95565b80601f016020809104026020016040519081016040528092919081815260200182805461043690610f95565b80156104835780601f1061045857610100808354040283529160200191610483565b820191906000526020600020905b81548152906001019060200180831161046657829003601f168201915b505050505081526020016002805461049a90610f95565b80601f01602080910402602001604051908101604052809291908181526020018280546104c690610f95565b80156105135780601f106104e857610100808354040283529160200191610513565b820191906000526020600020905b8154815290600101906020018083116104f657829003601f168201915b505050505081526020016003805461052a90610f95565b80601f016020809104026020016040519081016040528092919081815260200182805461055690610f95565b80156105a35780601f10610578576101008083540402835291602001916105a3565b820191906000526020600020905b81548152906001019060200180831161058657829003601f168201915b505050918352505060045460209091019060ff1660028111156105c8576105c8610c8f565b815260408051608081018252600554815260065460208281019190915260075492820192909252600854606082015291015292915050565b6001600160a01b0383166000908152600d602090815260408083208584529091529020548290849060ff16156106785760405162461bcd60e51b815260206004820152601960248201527f596f752063616e206f6e6c7920766f7465206f6e63652121210000000000000060448201526064016102df565b6001600160a01b0381166000908152600d602090815260408083208584529091528120805460ff191660011790558360018111156106b8576106b8610c8f565b14156106f957600b84815481106106d1576106d1611020565b6000918252602082206002600490920201018054916106ef83611036565b919050555061074a565b600183600181111561070d5761070d610c8f565b141561074a57600b848154811061072657610726611020565b60009182526020822060036004909202010180549161074483611036565b91905055505b5050505050565b600b818154811061076157600080fd5b6000918252602090912060049091020180546001820180546001600160a01b0390921693509061079090610f95565b80601f01602080910402602001604051908101604052809291908181526020018280546107bc90610f95565b80156108095780601f106107de57610100808354040283529160200191610809565b820191906000526020600020905b8154815290600101906020018083116107ec57829003601f168201915b5050505050908060020154908060030154905084565b6060600b805480602002602001604051908101604052809291908181526020016000905b8282101561093157600084815260209081902060408051608081019091526004850290910180546001600160a01b03168252600181018054929391929184019161088c90610f95565b80601f01602080910402602001604051908101604052809291908181526020018280546108b890610f95565b80156109055780601f106108da57610100808354040283529160200191610905565b820191906000526020600020905b8154815290600101906020018083116108e857829003601f168201915b505050505081526020016002820154815260200160038201548152505081526020019060010190610843565b50505050905090565b600280546101f790610f95565b600380546101f790610f95565b6001600160a01b0382166000908152600c6020526040902054829060ff16156109bf5760405162461bcd60e51b815260206004820152601960248201527f596f752063616e206f6e6c7920706f7374206f6e63652121210000000000000060448201526064016102df565b6001600160a01b038181166000908152600c6020908152604082208054600160ff199091168117909155600b805491820181559092527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9600490920291820180546001600160a01b0319169387169390931783558451610a64927f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dba0191860190610b3a565b5050506001600160a01b039091166000908152600c60205260409020805460ff1916600117905550565b6000610a9b826001610fe6565b83610aa68487611051565b610ab09190610fe6565b610aba9190610ffe565b949350505050565b6040518060c0016040528060006001600160a01b0316815260200160608152602001606081526020016060815260200160006002811115610b0557610b05610c8f565b8152602001610b356040518060800160405280600081526020016000815260200160008152602001600081525090565b905290565b828054610b4690610f95565b90600052602060002090601f016020900481019282610b685760008555610bae565b82601f10610b8157805160ff1916838001178555610bae565b82800160010185558215610bae579182015b82811115610bae578251825591602001919060010190610b93565b50610bba929150610bbe565b5090565b5b80821115610bba5760008155600101610bbf565b6000815180845260005b81811015610bf957602081850181015186830182015201610bdd565b81811115610c0b576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610c336020830184610bd3565b9392505050565b80356001600160a01b0381168114610c5157600080fd5b919050565b60008060008060808587031215610c6c57600080fd5b610c7585610c3a565b966020860135965060408601359560600135945092505050565b634e487b7160e01b600052602160045260246000fd5b60038110610cc357634e487b7160e01b600052602160045260246000fd5b9052565b602080825282516001600160a01b0316828201528201516101206040830181905260009190610cfa610140850183610bd3565b91506040850151601f1980868503016060870152610d188483610bd3565b9350606087015191508086850301608087015250610d368382610bd3565b9250506080850151610d4b60a0860182610ca5565b5060a09490940151805160c0850152602081015160e085015260408101516101008501526060015192909301919091525090565b600080600060608486031215610d9457600080fd5b610d9d84610c3a565b925060208401359150604084013560028110610db857600080fd5b809150509250925092565b600060208284031215610dd557600080fd5b5035919050565b6001600160a01b0385168152608060208201819052600090610e0090830186610bd3565b6040830194909452506060015292915050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015610e9b57888303603f19018552815180516001600160a01b0316845287810151608089860181905290610e7382870182610bd3565b838a0151878b0152606093840151939096019290925250509386019390860190600101610e3a565b509098975050505050505050565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610ed257600080fd5b610edb83610c3a565b9150602083013567ffffffffffffffff80821115610ef857600080fd5b818501915085601f830112610f0c57600080fd5b813581811115610f1e57610f1e610ea9565b604051601f8201601f19908116603f01168101908382118183101715610f4657610f46610ea9565b81604052828152886020848701011115610f5f57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60208101610f8f8284610ca5565b92915050565b600181811c90821680610fa957607f821691505b60208210811415610fca57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610ff957610ff9610fd0565b500190565b60008261101b57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060001982141561104a5761104a610fd0565b5060010190565b600081600019048311821515161561106b5761106b610fd0565b50029056fea26469706673582212202203fc9f5ae9c1e35bf3ae0f5ec530eaf537254ce6e7d5e26884e9bc70ba157064736f6c634300080a0033a264697066735822122032a649d0a98c0d51928ec12d8cf0948afcb0d03a03f06c3ead524761d70480a964736f6c634300080a003360806040523480156200001157600080fd5b5060405162000bc938038062000bc983398101604081905262000034916200024b565b6040518060400160405280600a8152602001692a393aba342a37b5b2b760b11b815250604051806040016040528060038152602001621510d560ea1b81525081600390805190602001906200008b929190620001a5565b508051620000a1906004906020840190620001a5565b505050620000b63382620000bd60201b60201c565b50620002c9565b6001600160a01b038216620001185760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200012c919062000265565b90915550506001600160a01b038216600090815260208190526040812080548392906200015b90849062000265565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001b3906200028c565b90600052602060002090601f016020900481019282620001d7576000855562000222565b82601f10620001f257805160ff191683800117855562000222565b8280016001018555821562000222579182015b828111156200022257825182559160200191906001019062000205565b506200023092915062000234565b5090565b5b8082111562000230576000815560010162000235565b6000602082840312156200025e57600080fd5b5051919050565b600082198211156200028757634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680620002a157607f821691505b60208210811415620002c357634e487b7160e01b600052602260045260246000fd5b50919050565b6108f080620002d96000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101c6565b6040516100c3919061070e565b60405180910390f35b6100df6100da36600461077f565b610258565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f3660046107a9565b61026e565b604051601281526020016100c3565b6100df61013136600461077f565b610324565b6100f36101443660046107e5565b6001600160a01b031660009081526020819052604090205490565b6100b661035b565b6100df61017536600461077f565b61036a565b6100df61018836600461077f565b610405565b6100f361019b366004610807565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101d59061083a565b80601f01602080910402602001604051908101604052809291908181526020018280546102019061083a565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b5050505050905090565b6000610265338484610412565b50600192915050565b600061027b848484610536565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103055760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103198533610314868561088b565b610412565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102659185906103149086906108a2565b6060600480546101d59061083a565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156103ec5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102fc565b6103fb3385610314868561088b565b5060019392505050565b6000610265338484610536565b6001600160a01b0383166104745760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102fc565b6001600160a01b0382166104d55760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102fc565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03831661059a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102fc565b6001600160a01b0382166105fc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102fc565b6001600160a01b038316600090815260208190526040902054818110156106745760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102fc565b61067e828261088b565b6001600160a01b0380861660009081526020819052604080822093909355908516815290812080548492906106b49084906108a2565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161070091815260200190565b60405180910390a350505050565b600060208083528351808285015260005b8181101561073b5785810183015185820160400152820161071f565b8181111561074d576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461077a57600080fd5b919050565b6000806040838503121561079257600080fd5b61079b83610763565b946020939093013593505050565b6000806000606084860312156107be57600080fd5b6107c784610763565b92506107d560208501610763565b9150604084013590509250925092565b6000602082840312156107f757600080fd5b61080082610763565b9392505050565b6000806040838503121561081a57600080fd5b61082383610763565b915061083160208401610763565b90509250929050565b600181811c9082168061084e57607f821691505b6020821081141561086f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561089d5761089d610875565b500390565b600082198211156108b5576108b5610875565b50019056fea2646970667358221220c5b294e218c87fdf083daec3e8c7e4a19c7ec696d0bb067f05177432af029dd264736f6c634300080a0033",
  "bytecodeSha1": "ad012f87b69b6744d49d3cd4de45c565872f1f8d",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.10+commit.fc410830"
  },
  "contractName": "CollectiveTruth",
  "coverageMap": {
    "branches": {
      "3": {},
      "4": {},
      "6": {}
    },
    "statements": {
      "3": {},
      "4": {
        "CollectiveTruth.createAsset": {
          "5": [
            1247,
            1279
          ],
          "6": [
            1290,
            1341
          ]
        },
        "CollectiveTruth.getAssetContractsMap": {
          "2": [
            1479,
            1514
          ]
        },
        "CollectiveTruth.getTokenBalance": {
          "3": [
            1734,
            1770
          ]
        },
        "CollectiveTruth.getUsers": {
          "0": [
            661,
            683
          ]
        },
        "CollectiveTruth.registerUser": {
          "7": [
            788,
            810
          ],
          "8": [
            821,
            867
          ]
        },
        "CollectiveTruth.setUsers": {
          "1": [
            549,
            571
          ]
        },
        "CollectiveTruth.transferTokens": {
          "4": [
            1602,
            1636
          ]
        }
      },
      "6": {}
    }
  },
  "dependencies": [
    "Asset",
    "TruthToken"
  ],
  "deployedBytecode": "60806040523480156200001157600080fd5b5060043610620000b75760003560e01c80638d915f58116200007a5780638d915f5814620001bd5780638e5fa1db14620001ec578063a87430ba1462000203578063bec3fa171462000229578063e7b7043e1462000240578063fa0b5e55146200025757600080fd5b80633aecd0e314620000bc5780633e302c8314620000e65780635123fa4a1462000113578063602b386e146200013f5780637bc4099a146200017f575b600080fd5b620000d3620000cd366004620004c0565b6200026e565b6040519081526020015b60405180910390f35b600254620000fa906001600160a01b031681565b6040516001600160a01b039091168152602001620000dd565b620000fa62000124366004620004c0565b6001602052600090815260409020546001600160a01b031681565b6200016e62000150366004620004c0565b6001600160a01b031660009081526003602052604090205460ff1690565b6040519015158152602001620000dd565b620001bb62000190366004620004f7565b6001600160a01b03919091166000908152600360205260409020805460ff1916911515919091179055565b005b620000fa620001ce366004620004c0565b6001600160a01b039081166000908152600160205260409020541690565b620000fa620001fd36600462000533565b620002e6565b6200016e62000214366004620004c0565b60036020526000908152604090205460ff1681565b620001bb6200023a3660046200054d565b62000311565b620001bb6200025136600462000625565b62000391565b620001bb620002683660046200054d565b6200043e565b6002546040516370a0823160e01b81526001600160a01b03838116600483015260009216906370a0823190602401602060405180830381865afa158015620002ba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002e09190620006e4565b92915050565b60008181548110620002f757600080fd5b6000918252602090912001546001600160a01b0316905081565b60025460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb906044015b6020604051808303816000875af115801562000366573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200038c9190620006fe565b505050565b60008585858585604051620003a69062000495565b620003b69594939291906200076e565b604051809103906000f080158015620003d3573d6000803e3d6000fd5b5060008054600181810183557f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56390910180546001600160a01b039485166001600160a01b03199182168117909255999093168252602052604090208054909716179095555050505050565b6001600160a01b0382811660008181526003602052604090819020805460ff19166001179055600254905163a9059cbb60e01b81526004810192909252602482018490529091169063a9059cbb9060440162000346565b61140b80620007f183390190565b80356001600160a01b0381168114620004bb57600080fd5b919050565b600060208284031215620004d357600080fd5b620004de82620004a3565b9392505050565b8015158114620004f457600080fd5b50565b600080604083850312156200050b57600080fd5b6200051683620004a3565b915060208301356200052881620004e5565b809150509250929050565b6000602082840312156200054657600080fd5b5035919050565b600080604083850312156200056157600080fd5b6200056c83620004a3565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620005a257600080fd5b813567ffffffffffffffff80821115620005c057620005c06200057a565b604051601f8301601f19908116603f01168101908282118183101715620005eb57620005eb6200057a565b816040528381528660208588010111156200060557600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a086880312156200063e57600080fd5b6200064986620004a3565b9450602086013567ffffffffffffffff808211156200066757600080fd5b6200067589838a0162000590565b955060408801359150808211156200068c57600080fd5b6200069a89838a0162000590565b94506060880135915080821115620006b157600080fd5b50620006c08882890162000590565b925050608086013560038110620006d657600080fd5b809150509295509295909350565b600060208284031215620006f757600080fd5b5051919050565b6000602082840312156200071157600080fd5b8151620004de81620004e5565b6000815180845260005b81811015620007465760208185018101518683018201520162000728565b8181111562000759576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b038616815260a06020820181905260009062000794908301876200071e565b8281036040840152620007a881876200071e565b90508281036060840152620007be81866200071e565b91505060038310620007e057634e487b7160e01b600052602160045260246000fd5b826080830152969550505050505056fe60806040523480156200001157600080fd5b506040516200140b3803806200140b833981016040819052620000349162000236565b600080546001600160a01b0319166001600160a01b038716179055835162000064906001906020870190620000c3565b5082516200007a906002906020860190620000c3565b50815162000090906003906020850190620000c3565b506004805482919060ff19166001836002811115620000b357620000b362000302565b0217905550505050505062000355565b828054620000d19062000318565b90600052602060002090601f016020900481019282620000f5576000855562000140565b82601f106200011057805160ff191683800117855562000140565b8280016001018555821562000140579182015b828111156200014057825182559160200191906001019062000123565b506200014e92915062000152565b5090565b5b808211156200014e576000815560010162000153565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200019157600080fd5b81516001600160401b0380821115620001ae57620001ae62000169565b604051601f8301601f19908116603f01168101908282118183101715620001d957620001d962000169565b81604052838152602092508683858801011115620001f657600080fd5b600091505b838210156200021a5785820183015181830184015290820190620001fb565b838211156200022c5760008385830101525b9695505050505050565b600080600080600060a086880312156200024f57600080fd5b85516001600160a01b03811681146200026757600080fd5b60208701519095506001600160401b03808211156200028557600080fd5b6200029389838a016200017f565b95506040880151915080821115620002aa57600080fd5b620002b889838a016200017f565b94506060880151915080821115620002cf57600080fd5b50620002de888289016200017f565b925050608086015160038110620002f457600080fd5b809150509295509295909350565b634e487b7160e01b600052602160045260246000fd5b600181811c908216806200032d57607f821691505b602082108114156200034f57634e487b7160e01b600052602260045260246000fd5b50919050565b6110a680620003656000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638ebb4c15116100715780638ebb4c151461017557806391f3410c1461019857806395d89b41146101ad578063b90497e0146101b5578063d917f76a146101bd578063ef430aa6146101d057600080fd5b806306fdde03146100b95780631ba46cfd146100d757806360e77b9e1461010257806373d4a13a1461011757806380f474f61461012c5780638211082714610162575b600080fd5b6100c16101ea565b6040516100ce9190610c20565b60405180910390f35b6000546100ea906001600160a01b031681565b6040516001600160a01b0390911681526020016100ce565b610115610110366004610c56565b610278565b005b61011f6103d2565b6040516100ce9190610cc7565b6005546006546007546008546101429392919084565b6040805194855260208501939093529183015260608201526080016100ce565b610115610170366004610d7f565b610600565b610188610183366004610dc3565b610751565b6040516100ce9493929190610ddc565b6101a061081f565b6040516100ce9190610e13565b6100c161093a565b6100c1610947565b6101156101cb366004610ebf565b610954565b6004546101dd9060ff1681565b6040516100ce9190610f81565b600180546101f790610f95565b80601f016020809104026020016040519081016040528092919081815260200182805461022390610f95565b80156102705780601f1061024557610100808354040283529160200191610270565b820191906000526020600020905b81548152906001019060200180831161025357829003601f168201915b505050505081565b6001600160a01b0384166000908152600a6020526040902054849060ff16156102e85760405162461bcd60e51b815260206004820152601960248201527f596f752063616e206f6e6c792072617465206f6e63652121210000000000000060448201526064015b60405180910390fd5b6001600160a01b0381166000908152600a60205260409020805460ff1916600117905560095460065461031c908683610a8e565b60065560075461032d908583610a8e565b60075560085461033e908483610a8e565b60085560006003846103508789610fe6565b61035a9190610fe6565b6103649190610ffe565b90506103766005600001548284610a8e565b6005555050600980546001810182556000919091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b0319166001600160a01b03969096169590951790945550505050565b6103da610ac2565b6040805160c08101909152600080546001600160a01b031682526001805491929160208301919061040a90610f95565b80601f016020809104026020016040519081016040528092919081815260200182805461043690610f95565b80156104835780601f1061045857610100808354040283529160200191610483565b820191906000526020600020905b81548152906001019060200180831161046657829003601f168201915b505050505081526020016002805461049a90610f95565b80601f01602080910402602001604051908101604052809291908181526020018280546104c690610f95565b80156105135780601f106104e857610100808354040283529160200191610513565b820191906000526020600020905b8154815290600101906020018083116104f657829003601f168201915b505050505081526020016003805461052a90610f95565b80601f016020809104026020016040519081016040528092919081815260200182805461055690610f95565b80156105a35780601f10610578576101008083540402835291602001916105a3565b820191906000526020600020905b81548152906001019060200180831161058657829003601f168201915b505050918352505060045460209091019060ff1660028111156105c8576105c8610c8f565b815260408051608081018252600554815260065460208281019190915260075492820192909252600854606082015291015292915050565b6001600160a01b0383166000908152600d602090815260408083208584529091529020548290849060ff16156106785760405162461bcd60e51b815260206004820152601960248201527f596f752063616e206f6e6c7920766f7465206f6e63652121210000000000000060448201526064016102df565b6001600160a01b0381166000908152600d602090815260408083208584529091528120805460ff191660011790558360018111156106b8576106b8610c8f565b14156106f957600b84815481106106d1576106d1611020565b6000918252602082206002600490920201018054916106ef83611036565b919050555061074a565b600183600181111561070d5761070d610c8f565b141561074a57600b848154811061072657610726611020565b60009182526020822060036004909202010180549161074483611036565b91905055505b5050505050565b600b818154811061076157600080fd5b6000918252602090912060049091020180546001820180546001600160a01b0390921693509061079090610f95565b80601f01602080910402602001604051908101604052809291908181526020018280546107bc90610f95565b80156108095780601f106107de57610100808354040283529160200191610809565b820191906000526020600020905b8154815290600101906020018083116107ec57829003601f168201915b5050505050908060020154908060030154905084565b6060600b805480602002602001604051908101604052809291908181526020016000905b8282101561093157600084815260209081902060408051608081019091526004850290910180546001600160a01b03168252600181018054929391929184019161088c90610f95565b80601f01602080910402602001604051908101604052809291908181526020018280546108b890610f95565b80156109055780601f106108da57610100808354040283529160200191610905565b820191906000526020600020905b8154815290600101906020018083116108e857829003601f168201915b505050505081526020016002820154815260200160038201548152505081526020019060010190610843565b50505050905090565b600280546101f790610f95565b600380546101f790610f95565b6001600160a01b0382166000908152600c6020526040902054829060ff16156109bf5760405162461bcd60e51b815260206004820152601960248201527f596f752063616e206f6e6c7920706f7374206f6e63652121210000000000000060448201526064016102df565b6001600160a01b038181166000908152600c6020908152604082208054600160ff199091168117909155600b805491820181559092527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9600490920291820180546001600160a01b0319169387169390931783558451610a64927f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dba0191860190610b3a565b5050506001600160a01b039091166000908152600c60205260409020805460ff1916600117905550565b6000610a9b826001610fe6565b83610aa68487611051565b610ab09190610fe6565b610aba9190610ffe565b949350505050565b6040518060c0016040528060006001600160a01b0316815260200160608152602001606081526020016060815260200160006002811115610b0557610b05610c8f565b8152602001610b356040518060800160405280600081526020016000815260200160008152602001600081525090565b905290565b828054610b4690610f95565b90600052602060002090601f016020900481019282610b685760008555610bae565b82601f10610b8157805160ff1916838001178555610bae565b82800160010185558215610bae579182015b82811115610bae578251825591602001919060010190610b93565b50610bba929150610bbe565b5090565b5b80821115610bba5760008155600101610bbf565b6000815180845260005b81811015610bf957602081850181015186830182015201610bdd565b81811115610c0b576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610c336020830184610bd3565b9392505050565b80356001600160a01b0381168114610c5157600080fd5b919050565b60008060008060808587031215610c6c57600080fd5b610c7585610c3a565b966020860135965060408601359560600135945092505050565b634e487b7160e01b600052602160045260246000fd5b60038110610cc357634e487b7160e01b600052602160045260246000fd5b9052565b602080825282516001600160a01b0316828201528201516101206040830181905260009190610cfa610140850183610bd3565b91506040850151601f1980868503016060870152610d188483610bd3565b9350606087015191508086850301608087015250610d368382610bd3565b9250506080850151610d4b60a0860182610ca5565b5060a09490940151805160c0850152602081015160e085015260408101516101008501526060015192909301919091525090565b600080600060608486031215610d9457600080fd5b610d9d84610c3a565b925060208401359150604084013560028110610db857600080fd5b809150509250925092565b600060208284031215610dd557600080fd5b5035919050565b6001600160a01b0385168152608060208201819052600090610e0090830186610bd3565b6040830194909452506060015292915050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015610e9b57888303603f19018552815180516001600160a01b0316845287810151608089860181905290610e7382870182610bd3565b838a0151878b0152606093840151939096019290925250509386019390860190600101610e3a565b509098975050505050505050565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610ed257600080fd5b610edb83610c3a565b9150602083013567ffffffffffffffff80821115610ef857600080fd5b818501915085601f830112610f0c57600080fd5b813581811115610f1e57610f1e610ea9565b604051601f8201601f19908116603f01168101908382118183101715610f4657610f46610ea9565b81604052828152886020848701011115610f5f57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60208101610f8f8284610ca5565b92915050565b600181811c90821680610fa957607f821691505b60208210811415610fca57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610ff957610ff9610fd0565b500190565b60008261101b57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060001982141561104a5761104a610fd0565b5060010190565b600081600019048311821515161561106b5761106b610fd0565b50029056fea26469706673582212202203fc9f5ae9c1e35bf3ae0f5ec530eaf537254ce6e7d5e26884e9bc70ba157064736f6c634300080a0033a264697066735822122032a649d0a98c0d51928ec12d8cf0948afcb0d03a03f06c3ead524761d70480a964736f6c634300080a0033",
  "deployedSourceMap": "127:1654:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1652:126;;;;;;:::i;:::-;;:::i;:::-;;;529:25:7;;;517:2;502:18;1652:126:4;;;;;;;;254:29;;;;;-1:-1:-1;;;;;254:29:4;;;;;;-1:-1:-1;;;;;747:32:7;;;729:51;;717:2;702:18;254:29:4;565:221:7;195:52:4;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;195:52:4;;;587:104;;;;;;:::i;:::-;-1:-1:-1;;;;;668:15:4;644:4;668:15;;;:5;:15;;;;;;;;;587:104;;;;1164:14:7;;1157:22;1139:41;;1127:2;1112:18;587:104:4;999:187:7;484:95:4;;;;;;:::i;:::-;-1:-1:-1;;;;;549:15:4;;;;;;;;:5;:15;;;;;:22;;-1:-1:-1;;549:22:4;;;;;;;;;;484:95;;;1357:165;;;;;;:::i;:::-;-1:-1:-1;;;;;1486:28:4;;;1454:7;1486:28;;;:17;:28;;;;;;;;1357:165;159:29;;;;;;:::i;:::-;;:::i;290:37::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1530:114;;;;;;:::i;:::-;;:::i;883:466::-;;;;;;:::i;:::-;;:::i;699:176::-;;;;;;:::i;:::-;;:::i;1652:126::-;1741:11;;:29;;-1:-1:-1;;;1741:29:4;;-1:-1:-1;;;;;747:32:7;;;1741:29:4;;;729:51:7;1714:7:4;;1741:11;;:21;;702:18:7;;1741:29:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1734:36;1652:126;-1:-1:-1;;1652:126:4:o;159:29::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;159:29:4;;-1:-1:-1;159:29:4;:::o;1530:114::-;1602:11;;:34;;-1:-1:-1;;;1602:34:4;;-1:-1:-1;;;;;4516:32:7;;;1602:34:4;;;4498:51:7;4565:18;;;4558:34;;;1602:11:4;;;;:20;;4471:18:7;;1602:34:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1530:114;;:::o;883:466::-;1082:17;1126:9;1150:5;1170:7;1192:9;1216;1102:134;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1247:14:4;:32;;;;;;;;;;;;;;-1:-1:-1;;;;;1247:32:4;;;-1:-1:-1;;;;;;1247:32:4;;;;;;;;1290:28;;;;;;1247:32;1290:28;;;;:51;;;;;;;;;-1:-1:-1;;;;;883:466:4:o;699:176::-;-1:-1:-1;;;;;788:15:4;;;;;;;:5;:15;;;;;;;:22;;-1:-1:-1;;788:22:4;806:4;788:22;;;821:11;;:46;;-1:-1:-1;;;821:46:4;;;;;4498:51:7;;;;4565:18;;;4558:34;;;821:11:4;;;;:20;;4471:18:7;;821:46:4;4324:274:7;-1:-1:-1;;;;;;;;:::o;14:173:7:-;82:20;;-1:-1:-1;;;;;131:31:7;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:7:o;1191:118::-;1277:5;1270:13;1263:21;1256:5;1253:32;1243:60;;1299:1;1296;1289:12;1243:60;1191:118;:::o;1314:315::-;1379:6;1387;1440:2;1428:9;1419:7;1415:23;1411:32;1408:52;;;1456:1;1453;1446:12;1408:52;1479:29;1498:9;1479:29;:::i;:::-;1469:39;;1558:2;1547:9;1543:18;1530:32;1571:28;1593:5;1571:28;:::i;:::-;1618:5;1608:15;;;1314:315;;;;;:::o;1634:180::-;1693:6;1746:2;1734:9;1725:7;1721:23;1717:32;1714:52;;;1762:1;1759;1752:12;1714:52;-1:-1:-1;1785:23:7;;1634:180;-1:-1:-1;1634:180:7:o;2040:254::-;2108:6;2116;2169:2;2157:9;2148:7;2144:23;2140:32;2137:52;;;2185:1;2182;2175:12;2137:52;2208:29;2227:9;2208:29;:::i;:::-;2198:39;2284:2;2269:18;;;;2256:32;;-1:-1:-1;;;2040:254:7:o;2299:127::-;2360:10;2355:3;2351:20;2348:1;2341:31;2391:4;2388:1;2381:15;2415:4;2412:1;2405:15;2431:719;2474:5;2527:3;2520:4;2512:6;2508:17;2504:27;2494:55;;2545:1;2542;2535:12;2494:55;2581:6;2568:20;2607:18;2644:2;2640;2637:10;2634:36;;;2650:18;;:::i;:::-;2725:2;2719:9;2693:2;2779:13;;-1:-1:-1;;2775:22:7;;;2799:2;2771:31;2767:40;2755:53;;;2823:18;;;2843:22;;;2820:46;2817:72;;;2869:18;;:::i;:::-;2909:10;2905:2;2898:22;2944:2;2936:6;2929:18;2990:3;2983:4;2978:2;2970:6;2966:15;2962:26;2959:35;2956:55;;;3007:1;3004;2997:12;2956:55;3071:2;3064:4;3056:6;3052:17;3045:4;3037:6;3033:17;3020:54;3118:1;3111:4;3106:2;3098:6;3094:15;3090:26;3083:37;3138:6;3129:15;;;;;;2431:719;;;;:::o;3155:975::-;3292:6;3300;3308;3316;3324;3377:3;3365:9;3356:7;3352:23;3348:33;3345:53;;;3394:1;3391;3384:12;3345:53;3417:29;3436:9;3417:29;:::i;:::-;3407:39;;3497:2;3486:9;3482:18;3469:32;3520:18;3561:2;3553:6;3550:14;3547:34;;;3577:1;3574;3567:12;3547:34;3600:50;3642:7;3633:6;3622:9;3618:22;3600:50;:::i;:::-;3590:60;;3703:2;3692:9;3688:18;3675:32;3659:48;;3732:2;3722:8;3719:16;3716:36;;;3748:1;3745;3738:12;3716:36;3771:52;3815:7;3804:8;3793:9;3789:24;3771:52;:::i;:::-;3761:62;;3876:2;3865:9;3861:18;3848:32;3832:48;;3905:2;3895:8;3892:16;3889:36;;;3921:1;3918;3911:12;3889:36;;3944:52;3988:7;3977:8;3966:9;3962:24;3944:52;:::i;:::-;3934:62;;;4046:3;4035:9;4031:19;4018:33;4080:1;4073:5;4070:12;4060:40;;4096:1;4093;4086:12;4060:40;4119:5;4109:15;;;3155:975;;;;;;;;:::o;4135:184::-;4205:6;4258:2;4246:9;4237:7;4233:23;4229:32;4226:52;;;4274:1;4271;4264:12;4226:52;-1:-1:-1;4297:16:7;;4135:184;-1:-1:-1;4135:184:7:o;4603:245::-;4670:6;4723:2;4711:9;4702:7;4698:23;4694:32;4691:52;;;4739:1;4736;4729:12;4691:52;4771:9;4765:16;4790:28;4812:5;4790:28;:::i;4853:472::-;4895:3;4933:5;4927:12;4960:6;4955:3;4948:19;4985:1;4995:162;5009:6;5006:1;5003:13;4995:162;;;5071:4;5127:13;;;5123:22;;5117:29;5099:11;;;5095:20;;5088:59;5024:12;4995:162;;;5175:6;5172:1;5169:13;5166:87;;;5241:1;5234:4;5225:6;5220:3;5216:16;5212:27;5205:38;5166:87;-1:-1:-1;5307:2:7;5286:15;-1:-1:-1;;5282:29:7;5273:39;;;;5314:4;5269:50;;4853:472;-1:-1:-1;;4853:472:7:o;5330:880::-;-1:-1:-1;;;;;5641:32:7;;5623:51;;5661:3;5705:2;5690:18;;5683:31;;;-1:-1:-1;;5737:46:7;;5763:19;;5755:6;5737:46;:::i;:::-;5831:9;5823:6;5819:22;5814:2;5803:9;5799:18;5792:50;5865:33;5891:6;5883;5865:33;:::i;:::-;5851:47;;5946:9;5938:6;5934:22;5929:2;5918:9;5914:18;5907:50;5974:33;6000:6;5992;5974:33;:::i;:::-;5966:41;;;6037:1;6029:6;6026:13;6016:144;;6082:10;6077:3;6073:20;6070:1;6063:31;6117:4;6114:1;6107:15;6145:4;6142:1;6135:15;6016:144;6197:6;6191:3;6180:9;6176:19;6169:35;5330:880;;;;;;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    127,
    1781
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0xB7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8D915F58 GT PUSH3 0x7A JUMPI DUP1 PUSH4 0x8D915F58 EQ PUSH3 0x1BD JUMPI DUP1 PUSH4 0x8E5FA1DB EQ PUSH3 0x1EC JUMPI DUP1 PUSH4 0xA87430BA EQ PUSH3 0x203 JUMPI DUP1 PUSH4 0xBEC3FA17 EQ PUSH3 0x229 JUMPI DUP1 PUSH4 0xE7B7043E EQ PUSH3 0x240 JUMPI DUP1 PUSH4 0xFA0B5E55 EQ PUSH3 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3AECD0E3 EQ PUSH3 0xBC JUMPI DUP1 PUSH4 0x3E302C83 EQ PUSH3 0xE6 JUMPI DUP1 PUSH4 0x5123FA4A EQ PUSH3 0x113 JUMPI DUP1 PUSH4 0x602B386E EQ PUSH3 0x13F JUMPI DUP1 PUSH4 0x7BC4099A EQ PUSH3 0x17F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xD3 PUSH3 0xCD CALLDATASIZE PUSH1 0x4 PUSH3 0x4C0 JUMP JUMPDEST PUSH3 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD PUSH3 0xFA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0xDD JUMP JUMPDEST PUSH3 0xFA PUSH3 0x124 CALLDATASIZE PUSH1 0x4 PUSH3 0x4C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH3 0x16E PUSH3 0x150 CALLDATASIZE PUSH1 0x4 PUSH3 0x4C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0xDD JUMP JUMPDEST PUSH3 0x1BB PUSH3 0x190 CALLDATASIZE PUSH1 0x4 PUSH3 0x4F7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST STOP JUMPDEST PUSH3 0xFA PUSH3 0x1CE CALLDATASIZE PUSH1 0x4 PUSH3 0x4C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH3 0xFA PUSH3 0x1FD CALLDATASIZE PUSH1 0x4 PUSH3 0x533 JUMP JUMPDEST PUSH3 0x2E6 JUMP JUMPDEST PUSH3 0x16E PUSH3 0x214 CALLDATASIZE PUSH1 0x4 PUSH3 0x4C0 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH3 0x1BB PUSH3 0x23A CALLDATASIZE PUSH1 0x4 PUSH3 0x54D JUMP JUMPDEST PUSH3 0x311 JUMP JUMPDEST PUSH3 0x1BB PUSH3 0x251 CALLDATASIZE PUSH1 0x4 PUSH3 0x625 JUMP JUMPDEST PUSH3 0x391 JUMP JUMPDEST PUSH3 0x1BB PUSH3 0x268 CALLDATASIZE PUSH1 0x4 PUSH3 0x54D JUMP JUMPDEST PUSH3 0x43E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x2BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x2E0 SWAP2 SWAP1 PUSH3 0x6E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH3 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x366 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x38C SWAP2 SWAP1 PUSH3 0x6FE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH3 0x3A6 SWAP1 PUSH3 0x495 JUMP JUMPDEST PUSH3 0x3B6 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x76E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x3D3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP10 SWAP1 SWAP4 AND DUP3 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP8 AND OR SWAP1 SWAP6 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x2 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH3 0x346 JUMP JUMPDEST PUSH2 0x140B DUP1 PUSH3 0x7F1 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x4BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x4D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x4DE DUP3 PUSH3 0x4A3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH3 0x4F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x50B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x516 DUP4 PUSH3 0x4A3 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH3 0x528 DUP2 PUSH3 0x4E5 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x546 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x561 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x56C DUP4 PUSH3 0x4A3 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x5A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH3 0x5C0 JUMPI PUSH3 0x5C0 PUSH3 0x57A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x5EB JUMPI PUSH3 0x5EB PUSH3 0x57A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x605 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x63E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x649 DUP7 PUSH3 0x4A3 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH3 0x667 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x675 DUP10 DUP4 DUP11 ADD PUSH3 0x590 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x68C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x69A DUP10 DUP4 DUP11 ADD PUSH3 0x590 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x6B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x6C0 DUP9 DUP3 DUP10 ADD PUSH3 0x590 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH3 0x6D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x6F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x711 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x4DE DUP2 PUSH3 0x4E5 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x746 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH3 0x728 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH3 0x759 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH3 0x794 SWAP1 DUP4 ADD DUP8 PUSH3 0x71E JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH3 0x7A8 DUP2 DUP8 PUSH3 0x71E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH3 0x7BE DUP2 DUP7 PUSH3 0x71E JUMP JUMPDEST SWAP2 POP POP PUSH1 0x3 DUP4 LT PUSH3 0x7E0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP3 PUSH1 0x80 DUP4 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x140B CODESIZE SUB DUP1 PUSH3 0x140B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x236 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND OR SWAP1 SSTORE DUP4 MLOAD PUSH3 0x64 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP8 ADD SWAP1 PUSH3 0xC3 JUMP JUMPDEST POP DUP3 MLOAD PUSH3 0x7A SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP7 ADD SWAP1 PUSH3 0xC3 JUMP JUMPDEST POP DUP2 MLOAD PUSH3 0x90 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0xC3 JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH1 0xFF NOT AND PUSH1 0x1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0xB3 JUMPI PUSH3 0xB3 PUSH3 0x302 JUMP JUMPDEST MUL OR SWAP1 SSTORE POP POP POP POP POP POP PUSH3 0x355 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xD1 SWAP1 PUSH3 0x318 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xF5 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x140 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x110 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x140 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x140 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x140 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x123 JUMP JUMPDEST POP PUSH3 0x14E SWAP3 SWAP2 POP PUSH3 0x152 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x14E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x153 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1AE JUMPI PUSH3 0x1AE PUSH3 0x169 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x1D9 JUMPI PUSH3 0x1D9 PUSH3 0x169 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x21A JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1FB JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x22C JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP8 ADD MLOAD SWAP1 SWAP6 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x285 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x293 DUP10 DUP4 DUP11 ADD PUSH3 0x17F JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x2B8 DUP10 DUP4 DUP11 ADD PUSH3 0x17F JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x2DE DUP9 DUP3 DUP10 ADD PUSH3 0x17F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD MLOAD PUSH1 0x3 DUP2 LT PUSH3 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x32D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x34F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10A6 DUP1 PUSH3 0x365 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8EBB4C15 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8EBB4C15 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x91F3410C EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0xB90497E0 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0xD917F76A EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0xEF430AA6 EQ PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x1BA46CFD EQ PUSH2 0xD7 JUMPI DUP1 PUSH4 0x60E77B9E EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x73D4A13A EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x80F474F6 EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x82110827 EQ PUSH2 0x162 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x1EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xC20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xEA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0x115 PUSH2 0x110 CALLDATASIZE PUSH1 0x4 PUSH2 0xC56 JUMP JUMPDEST PUSH2 0x278 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11F PUSH2 0x3D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH2 0x142 SWAP4 SWAP3 SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0xCE JUMP JUMPDEST PUSH2 0x115 PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0xD7F JUMP JUMPDEST PUSH2 0x600 JUMP JUMPDEST PUSH2 0x188 PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0xDC3 JUMP JUMPDEST PUSH2 0x751 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDDC JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x81F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xE13 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x93A JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x947 JUMP JUMPDEST PUSH2 0x115 PUSH2 0x1CB CALLDATASIZE PUSH1 0x4 PUSH2 0xEBF JUMP JUMPDEST PUSH2 0x954 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x1DD SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xF81 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x1F7 SWAP1 PUSH2 0xF95 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x223 SWAP1 PUSH2 0xF95 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x270 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x245 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x270 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x253 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E206F6E6C792072617465206F6E636521212100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x9 SLOAD PUSH1 0x6 SLOAD PUSH2 0x31C SWAP1 DUP7 DUP4 PUSH2 0xA8E JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x7 SLOAD PUSH2 0x32D SWAP1 DUP6 DUP4 PUSH2 0xA8E JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x8 SLOAD PUSH2 0x33E SWAP1 DUP5 DUP4 PUSH2 0xA8E JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x0 PUSH1 0x3 DUP5 PUSH2 0x350 DUP8 DUP10 PUSH2 0xFE6 JUMP JUMPDEST PUSH2 0x35A SWAP2 SWAP1 PUSH2 0xFE6 JUMP JUMPDEST PUSH2 0x364 SWAP2 SWAP1 PUSH2 0xFFE JUMP JUMPDEST SWAP1 POP PUSH2 0x376 PUSH1 0x5 PUSH1 0x0 ADD SLOAD DUP3 DUP5 PUSH2 0xA8E JUMP JUMPDEST PUSH1 0x5 SSTORE POP POP PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x3DA PUSH2 0xAC2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 DUP1 SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 PUSH2 0x40A SWAP1 PUSH2 0xF95 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x436 SWAP1 PUSH2 0xF95 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x483 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x458 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x483 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x466 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP1 SLOAD PUSH2 0x49A SWAP1 PUSH2 0xF95 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4C6 SWAP1 PUSH2 0xF95 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x513 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4E8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x513 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4F6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP1 SLOAD PUSH2 0x52A SWAP1 PUSH2 0xF95 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x556 SWAP1 PUSH2 0xF95 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5A3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x578 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5A3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x586 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x4 SLOAD PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x5C8 JUMPI PUSH2 0x5C8 PUSH2 0xC8F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x6 SLOAD PUSH1 0x20 DUP3 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x7 SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x8 SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 SWAP1 DUP5 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x678 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E206F6E6C7920766F7465206F6E636521212100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x6B8 JUMPI PUSH2 0x6B8 PUSH2 0xC8F JUMP JUMPDEST EQ ISZERO PUSH2 0x6F9 JUMPI PUSH1 0xB DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x6D1 JUMPI PUSH2 0x6D1 PUSH2 0x1020 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x2 PUSH1 0x4 SWAP1 SWAP3 MUL ADD ADD DUP1 SLOAD SWAP2 PUSH2 0x6EF DUP4 PUSH2 0x1036 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x74A JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x70D JUMPI PUSH2 0x70D PUSH2 0xC8F JUMP JUMPDEST EQ ISZERO PUSH2 0x74A JUMPI PUSH1 0xB DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x726 JUMPI PUSH2 0x726 PUSH2 0x1020 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x3 PUSH1 0x4 SWAP1 SWAP3 MUL ADD ADD DUP1 SLOAD SWAP2 PUSH2 0x744 DUP4 PUSH2 0x1036 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x761 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP SWAP1 PUSH2 0x790 SWAP1 PUSH2 0xF95 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7BC SWAP1 PUSH2 0xF95 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x809 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7DE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x809 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7EC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xB DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x931 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH2 0x88C SWAP1 PUSH2 0xF95 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8B8 SWAP1 PUSH2 0xF95 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x905 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8DA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x905 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8E8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x843 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x1F7 SWAP1 PUSH2 0xF95 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH2 0x1F7 SWAP1 PUSH2 0xF95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x9BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E206F6E6C7920706F7374206F6E636521212100000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xB DUP1 SLOAD SWAP2 DUP3 ADD DUP2 SSTORE SWAP1 SWAP3 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 PUSH1 0x4 SWAP1 SWAP3 MUL SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP4 DUP8 AND SWAP4 SWAP1 SWAP4 OR DUP4 SSTORE DUP5 MLOAD PUSH2 0xA64 SWAP3 PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DBA ADD SWAP2 DUP7 ADD SWAP1 PUSH2 0xB3A JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA9B DUP3 PUSH1 0x1 PUSH2 0xFE6 JUMP JUMPDEST DUP4 PUSH2 0xAA6 DUP5 DUP8 PUSH2 0x1051 JUMP JUMPDEST PUSH2 0xAB0 SWAP2 SWAP1 PUSH2 0xFE6 JUMP JUMPDEST PUSH2 0xABA SWAP2 SWAP1 PUSH2 0xFFE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB05 JUMPI PUSH2 0xB05 PUSH2 0xC8F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB35 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST SWAP1 MSTORE SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0xB46 SWAP1 PUSH2 0xF95 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0xB68 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0xBAE JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0xB81 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xBAE JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xBAE JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xBAE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB93 JUMP JUMPDEST POP PUSH2 0xBBA SWAP3 SWAP2 POP PUSH2 0xBBE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xBBA JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBF9 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xBDD JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xC0B JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xC33 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBD3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xC6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC75 DUP6 PUSH2 0xC3A JUMP JUMPDEST SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x60 ADD CALLDATALOAD SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0xCC3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 DUP3 ADD MSTORE DUP3 ADD MLOAD PUSH2 0x120 PUSH1 0x40 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH2 0xCFA PUSH2 0x140 DUP6 ADD DUP4 PUSH2 0xBD3 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x1F NOT DUP1 DUP7 DUP6 SUB ADD PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0xD18 DUP5 DUP4 PUSH2 0xBD3 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD MLOAD SWAP2 POP DUP1 DUP7 DUP6 SUB ADD PUSH1 0x80 DUP8 ADD MSTORE POP PUSH2 0xD36 DUP4 DUP3 PUSH2 0xBD3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP6 ADD MLOAD PUSH2 0xD4B PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0xCA5 JUMP JUMPDEST POP PUSH1 0xA0 SWAP5 SWAP1 SWAP5 ADD MLOAD DUP1 MLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x60 ADD MLOAD SWAP3 SWAP1 SWAP4 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD9D DUP5 PUSH2 0xC3A JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0x2 DUP2 LT PUSH2 0xDB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xE00 SWAP1 DUP4 ADD DUP7 PUSH2 0xBD3 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP PUSH1 0x60 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 POP DUP3 DUP7 ADD SWAP2 POP DUP3 DUP2 PUSH1 0x5 SHL DUP8 ADD ADD DUP5 DUP9 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE9B JUMPI DUP9 DUP4 SUB PUSH1 0x3F NOT ADD DUP6 MSTORE DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP8 DUP2 ADD MLOAD PUSH1 0x80 DUP10 DUP7 ADD DUP2 SWAP1 MSTORE SWAP1 PUSH2 0xE73 DUP3 DUP8 ADD DUP3 PUSH2 0xBD3 JUMP JUMPDEST DUP4 DUP11 ADD MLOAD DUP8 DUP12 ADD MSTORE PUSH1 0x60 SWAP4 DUP5 ADD MLOAD SWAP4 SWAP1 SWAP7 ADD SWAP3 SWAP1 SWAP3 MSTORE POP POP SWAP4 DUP7 ADD SWAP4 SWAP1 DUP7 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xE3A JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xED2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEDB DUP4 PUSH2 0xC3A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF1E JUMPI PUSH2 0xF1E PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF46 JUMPI PUSH2 0xF46 PUSH2 0xEA9 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xF5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0xF8F DUP3 DUP5 PUSH2 0xCA5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFA9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xFCA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xFF9 JUMPI PUSH2 0xFF9 PUSH2 0xFD0 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x101B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x104A JUMPI PUSH2 0x104A PUSH2 0xFD0 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x106B JUMPI PUSH2 0x106B PUSH2 0xFD0 JUMP JUMPDEST POP MUL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 SUB 0xFC SWAP16 GAS 0xE9 0xC1 0xE3 JUMPDEST RETURN 0xAE 0xF 0x5E 0xC5 ADDRESS 0xEA CREATE2 CALLDATACOPY 0x25 0x4C 0xE6 0xE7 0xD5 0xE2 PUSH9 0x84E9BC70BA15706473 PUSH16 0x6C634300080A0033A264697066735822 SLT KECCAK256 ORIGIN 0xA6 0x49 0xD0 0xA9 DUP13 0xD MLOAD SWAP3 DUP15 0xC1 0x2D DUP13 CREATE SWAP5 DUP11 0xFC 0xB0 0xD0 GASPRICE SUB CREATE PUSH13 0x3EAD524761D70480A964736F6C PUSH4 0x4300080A STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        127,
        1781
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "6": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "8": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x11"
    },
    "12": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "13": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "DUP1",
      "path": "4"
    },
    "16": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "REVERT",
      "path": "4"
    },
    "17": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "18": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "POP",
      "path": "4"
    },
    "19": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "21": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "22": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "LT",
      "path": "4"
    },
    "23": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0xB7"
    },
    "27": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "28": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "30": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "31": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "33": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "SHR",
      "path": "4"
    },
    "34": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "DUP1",
      "path": "4"
    },
    "35": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x8D915F58"
    },
    "40": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "GT",
      "path": "4"
    },
    "41": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x7A"
    },
    "45": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "46": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "DUP1",
      "path": "4"
    },
    "47": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x8D915F58"
    },
    "52": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "EQ",
      "path": "4"
    },
    "53": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x1BD"
    },
    "57": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "58": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "DUP1",
      "path": "4"
    },
    "59": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x8E5FA1DB"
    },
    "64": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "EQ",
      "path": "4"
    },
    "65": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x1EC"
    },
    "69": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "70": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "DUP1",
      "path": "4"
    },
    "71": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA87430BA"
    },
    "76": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "EQ",
      "path": "4"
    },
    "77": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x203"
    },
    "81": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "82": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "DUP1",
      "path": "4"
    },
    "83": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xBEC3FA17"
    },
    "88": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "EQ",
      "path": "4"
    },
    "89": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x229"
    },
    "93": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "94": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "DUP1",
      "path": "4"
    },
    "95": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xE7B7043E"
    },
    "100": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "EQ",
      "path": "4"
    },
    "101": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x240"
    },
    "105": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "106": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "DUP1",
      "path": "4"
    },
    "107": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFA0B5E55"
    },
    "112": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "EQ",
      "path": "4"
    },
    "113": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x257"
    },
    "117": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "118": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "120": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "DUP1",
      "path": "4"
    },
    "121": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "REVERT",
      "path": "4"
    },
    "122": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "123": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "DUP1",
      "path": "4"
    },
    "124": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x3AECD0E3"
    },
    "129": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "EQ",
      "path": "4"
    },
    "130": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0xBC"
    },
    "134": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "135": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "DUP1",
      "path": "4"
    },
    "136": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x3E302C83"
    },
    "141": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "EQ",
      "path": "4"
    },
    "142": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0xE6"
    },
    "146": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "147": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "DUP1",
      "path": "4"
    },
    "148": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x5123FA4A"
    },
    "153": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "EQ",
      "path": "4"
    },
    "154": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x113"
    },
    "158": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "159": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "DUP1",
      "path": "4"
    },
    "160": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x602B386E"
    },
    "165": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "EQ",
      "path": "4"
    },
    "166": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x13F"
    },
    "170": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "171": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "DUP1",
      "path": "4"
    },
    "172": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x7BC4099A"
    },
    "177": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "EQ",
      "path": "4"
    },
    "178": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x17F"
    },
    "182": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "183": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "184": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "186": {
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "DUP1",
      "path": "4"
    },
    "187": {
      "first_revert": true,
      "fn": null,
      "offset": [
        127,
        1781
      ],
      "op": "REVERT",
      "path": "4"
    },
    "188": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1652,
        1778
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "189": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1652,
        1778
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0xD3"
    },
    "193": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1652,
        1778
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0xCD"
    },
    "197": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1652,
        1778
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "198": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1652,
        1778
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "200": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1652,
        1778
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x4C0"
    },
    "204": {
      "fn": "CollectiveTruth.getTokenBalance",
      "jump": "i",
      "offset": [
        1652,
        1778
      ],
      "op": "JUMP",
      "path": "4"
    },
    "205": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1652,
        1778
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "206": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1652,
        1778
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x26E"
    },
    "210": {
      "fn": "CollectiveTruth.getTokenBalance",
      "jump": "i",
      "offset": [
        1652,
        1778
      ],
      "op": "JUMP",
      "path": "4"
    },
    "211": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1652,
        1778
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "212": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1652,
        1778
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "214": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1652,
        1778
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "215": {
      "op": "SWAP1"
    },
    "216": {
      "op": "DUP2"
    },
    "217": {
      "op": "MSTORE"
    },
    "218": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "220": {
      "op": "ADD"
    },
    "221": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1652,
        1778
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "222": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1652,
        1778
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "224": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1652,
        1778
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "225": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1652,
        1778
      ],
      "op": "DUP1",
      "path": "4"
    },
    "226": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1652,
        1778
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "227": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1652,
        1778
      ],
      "op": "SUB",
      "path": "4"
    },
    "228": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1652,
        1778
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "229": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1652,
        1778
      ],
      "op": "RETURN",
      "path": "4"
    },
    "230": {
      "offset": [
        254,
        283
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "231": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        254,
        283
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "233": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        254,
        283
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "234": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        254,
        283
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0xFA"
    },
    "238": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        254,
        283
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "243": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "245": {
      "op": "SHL"
    },
    "246": {
      "op": "SUB"
    },
    "247": {
      "offset": [
        254,
        283
      ],
      "op": "AND",
      "path": "4"
    },
    "248": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        254,
        283
      ],
      "op": "DUP2",
      "path": "4"
    },
    "249": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        254,
        283
      ],
      "op": "JUMP",
      "path": "4"
    },
    "250": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        254,
        283
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "251": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        254,
        283
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "253": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        254,
        283
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "258": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "260": {
      "op": "SHL"
    },
    "261": {
      "op": "SUB"
    },
    "262": {
      "op": "SWAP1"
    },
    "263": {
      "op": "SWAP2"
    },
    "264": {
      "op": "AND"
    },
    "265": {
      "op": "DUP2"
    },
    "266": {
      "op": "MSTORE"
    },
    "267": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "269": {
      "op": "ADD"
    },
    "270": {
      "offset": [
        254,
        283
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0xDD"
    },
    "274": {
      "op": "JUMP"
    },
    "275": {
      "offset": [
        195,
        247
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "276": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        195,
        247
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0xFA"
    },
    "280": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        195,
        247
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x124"
    },
    "284": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        195,
        247
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "285": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        195,
        247
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "287": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        195,
        247
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x4C0"
    },
    "291": {
      "fn": "CollectiveTruth.getTokenBalance",
      "jump": "i",
      "offset": [
        195,
        247
      ],
      "op": "JUMP",
      "path": "4"
    },
    "292": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        195,
        247
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "293": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        195,
        247
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "295": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        195,
        247
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "297": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        195,
        247
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "298": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        195,
        247
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "300": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        195,
        247
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "301": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        195,
        247
      ],
      "op": "DUP2",
      "path": "4"
    },
    "302": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        195,
        247
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "303": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        195,
        247
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "305": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        195,
        247
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "306": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        195,
        247
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "307": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        195,
        247
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "312": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "314": {
      "op": "SHL"
    },
    "315": {
      "op": "SUB"
    },
    "316": {
      "offset": [
        195,
        247
      ],
      "op": "AND",
      "path": "4"
    },
    "317": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        195,
        247
      ],
      "op": "DUP2",
      "path": "4"
    },
    "318": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        195,
        247
      ],
      "op": "JUMP",
      "path": "4"
    },
    "319": {
      "fn": "CollectiveTruth.getUsers",
      "offset": [
        587,
        691
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "320": {
      "fn": "CollectiveTruth.getUsers",
      "offset": [
        587,
        691
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x16E"
    },
    "324": {
      "fn": "CollectiveTruth.getUsers",
      "offset": [
        587,
        691
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x150"
    },
    "328": {
      "fn": "CollectiveTruth.getUsers",
      "offset": [
        587,
        691
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "329": {
      "fn": "CollectiveTruth.getUsers",
      "offset": [
        587,
        691
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "331": {
      "fn": "CollectiveTruth.getUsers",
      "offset": [
        587,
        691
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x4C0"
    },
    "335": {
      "fn": "CollectiveTruth.getUsers",
      "jump": "i",
      "offset": [
        587,
        691
      ],
      "op": "JUMP",
      "path": "4"
    },
    "336": {
      "fn": "CollectiveTruth.getUsers",
      "offset": [
        587,
        691
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "343": {
      "op": "SHL"
    },
    "344": {
      "op": "SUB"
    },
    "345": {
      "fn": "CollectiveTruth.getUsers",
      "offset": [
        668,
        683
      ],
      "op": "AND",
      "path": "4",
      "statement": 0
    },
    "346": {
      "fn": "CollectiveTruth.getUsers",
      "offset": [
        644,
        648
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "348": {
      "fn": "CollectiveTruth.getUsers",
      "offset": [
        668,
        683
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "349": {
      "fn": "CollectiveTruth.getUsers",
      "offset": [
        668,
        683
      ],
      "op": "DUP2",
      "path": "4"
    },
    "350": {
      "fn": "CollectiveTruth.getUsers",
      "offset": [
        668,
        683
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "351": {
      "fn": "CollectiveTruth.getUsers",
      "offset": [
        668,
        673
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "353": {
      "fn": "CollectiveTruth.getUsers",
      "offset": [
        668,
        683
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "355": {
      "fn": "CollectiveTruth.getUsers",
      "offset": [
        668,
        683
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "356": {
      "fn": "CollectiveTruth.getUsers",
      "offset": [
        668,
        683
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "358": {
      "fn": "CollectiveTruth.getUsers",
      "offset": [
        668,
        683
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "359": {
      "fn": "CollectiveTruth.getUsers",
      "offset": [
        668,
        683
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "360": {
      "fn": "CollectiveTruth.getUsers",
      "offset": [
        668,
        683
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "361": {
      "fn": "CollectiveTruth.getUsers",
      "offset": [
        668,
        683
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "363": {
      "fn": "CollectiveTruth.getUsers",
      "offset": [
        668,
        683
      ],
      "op": "AND",
      "path": "4"
    },
    "364": {
      "fn": "CollectiveTruth.getUsers",
      "offset": [
        668,
        683
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "365": {
      "fn": "CollectiveTruth.getUsers",
      "offset": [
        587,
        691
      ],
      "op": "JUMP",
      "path": "4"
    },
    "366": {
      "fn": "CollectiveTruth.getUsers",
      "offset": [
        587,
        691
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "367": {
      "fn": "CollectiveTruth.getUsers",
      "offset": [
        587,
        691
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "369": {
      "fn": "CollectiveTruth.getUsers",
      "offset": [
        587,
        691
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "370": {
      "op": "SWAP1"
    },
    "371": {
      "op": "ISZERO"
    },
    "372": {
      "op": "ISZERO"
    },
    "373": {
      "op": "DUP2"
    },
    "374": {
      "op": "MSTORE"
    },
    "375": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "377": {
      "op": "ADD"
    },
    "378": {
      "fn": "CollectiveTruth.getUsers",
      "offset": [
        587,
        691
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0xDD"
    },
    "382": {
      "op": "JUMP"
    },
    "383": {
      "fn": "CollectiveTruth.setUsers",
      "offset": [
        484,
        579
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "384": {
      "fn": "CollectiveTruth.setUsers",
      "offset": [
        484,
        579
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x1BB"
    },
    "388": {
      "fn": "CollectiveTruth.setUsers",
      "offset": [
        484,
        579
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x190"
    },
    "392": {
      "fn": "CollectiveTruth.setUsers",
      "offset": [
        484,
        579
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "393": {
      "fn": "CollectiveTruth.setUsers",
      "offset": [
        484,
        579
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "395": {
      "fn": "CollectiveTruth.setUsers",
      "offset": [
        484,
        579
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x4F7"
    },
    "399": {
      "fn": "CollectiveTruth.setUsers",
      "jump": "i",
      "offset": [
        484,
        579
      ],
      "op": "JUMP",
      "path": "4"
    },
    "400": {
      "fn": "CollectiveTruth.setUsers",
      "offset": [
        484,
        579
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "405": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "407": {
      "op": "SHL"
    },
    "408": {
      "op": "SUB"
    },
    "409": {
      "fn": "CollectiveTruth.setUsers",
      "offset": [
        549,
        564
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 1
    },
    "410": {
      "fn": "CollectiveTruth.setUsers",
      "offset": [
        549,
        564
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "411": {
      "fn": "CollectiveTruth.setUsers",
      "offset": [
        549,
        564
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "412": {
      "fn": "CollectiveTruth.setUsers",
      "offset": [
        549,
        564
      ],
      "op": "AND",
      "path": "4"
    },
    "413": {
      "fn": "CollectiveTruth.setUsers",
      "offset": [
        549,
        564
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "415": {
      "fn": "CollectiveTruth.setUsers",
      "offset": [
        549,
        564
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "416": {
      "fn": "CollectiveTruth.setUsers",
      "offset": [
        549,
        564
      ],
      "op": "DUP2",
      "path": "4"
    },
    "417": {
      "fn": "CollectiveTruth.setUsers",
      "offset": [
        549,
        564
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "418": {
      "fn": "CollectiveTruth.setUsers",
      "offset": [
        549,
        554
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "420": {
      "fn": "CollectiveTruth.setUsers",
      "offset": [
        549,
        564
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "422": {
      "fn": "CollectiveTruth.setUsers",
      "offset": [
        549,
        564
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "423": {
      "fn": "CollectiveTruth.setUsers",
      "offset": [
        549,
        564
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "425": {
      "fn": "CollectiveTruth.setUsers",
      "offset": [
        549,
        564
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "426": {
      "fn": "CollectiveTruth.setUsers",
      "offset": [
        549,
        564
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "427": {
      "fn": "CollectiveTruth.setUsers",
      "offset": [
        549,
        571
      ],
      "op": "DUP1",
      "path": "4"
    },
    "428": {
      "fn": "CollectiveTruth.setUsers",
      "offset": [
        549,
        571
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "429": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "431": {
      "op": "NOT"
    },
    "432": {
      "fn": "CollectiveTruth.setUsers",
      "offset": [
        549,
        571
      ],
      "op": "AND",
      "path": "4"
    },
    "433": {
      "fn": "CollectiveTruth.setUsers",
      "offset": [
        549,
        571
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "434": {
      "fn": "CollectiveTruth.setUsers",
      "offset": [
        549,
        571
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "435": {
      "fn": "CollectiveTruth.setUsers",
      "offset": [
        549,
        571
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "436": {
      "fn": "CollectiveTruth.setUsers",
      "offset": [
        549,
        571
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "437": {
      "fn": "CollectiveTruth.setUsers",
      "offset": [
        549,
        571
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "438": {
      "fn": "CollectiveTruth.setUsers",
      "offset": [
        549,
        571
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "439": {
      "fn": "CollectiveTruth.setUsers",
      "offset": [
        549,
        571
      ],
      "op": "OR",
      "path": "4"
    },
    "440": {
      "fn": "CollectiveTruth.setUsers",
      "offset": [
        549,
        571
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "441": {
      "fn": "CollectiveTruth.setUsers",
      "offset": [
        549,
        571
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "442": {
      "fn": "CollectiveTruth.setUsers",
      "offset": [
        484,
        579
      ],
      "op": "JUMP",
      "path": "4"
    },
    "443": {
      "fn": "CollectiveTruth.setUsers",
      "offset": [
        484,
        579
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "444": {
      "fn": "CollectiveTruth.setUsers",
      "offset": [
        484,
        579
      ],
      "op": "STOP",
      "path": "4"
    },
    "445": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        1357,
        1522
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "446": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        1357,
        1522
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0xFA"
    },
    "450": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        1357,
        1522
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x1CE"
    },
    "454": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        1357,
        1522
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "455": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        1357,
        1522
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "457": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        1357,
        1522
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x4C0"
    },
    "461": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "jump": "i",
      "offset": [
        1357,
        1522
      ],
      "op": "JUMP",
      "path": "4"
    },
    "462": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        1357,
        1522
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "467": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "469": {
      "op": "SHL"
    },
    "470": {
      "op": "SUB"
    },
    "471": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        1486,
        1514
      ],
      "op": "SWAP1",
      "path": "4",
      "statement": 2
    },
    "472": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        1486,
        1514
      ],
      "op": "DUP2",
      "path": "4"
    },
    "473": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        1486,
        1514
      ],
      "op": "AND",
      "path": "4"
    },
    "474": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        1454,
        1461
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "476": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        1486,
        1514
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "477": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        1486,
        1514
      ],
      "op": "DUP2",
      "path": "4"
    },
    "478": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        1486,
        1514
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "479": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        1486,
        1503
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "481": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        1486,
        1514
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "483": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        1486,
        1514
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "484": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        1486,
        1514
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "486": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        1486,
        1514
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "487": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        1486,
        1514
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "488": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        1486,
        1514
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "489": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        1486,
        1514
      ],
      "op": "AND",
      "path": "4"
    },
    "490": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        1486,
        1514
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "491": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        1357,
        1522
      ],
      "op": "JUMP",
      "path": "4"
    },
    "492": {
      "offset": [
        159,
        188
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "493": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        159,
        188
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0xFA"
    },
    "497": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        159,
        188
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x1FD"
    },
    "501": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        159,
        188
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "502": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        159,
        188
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "504": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        159,
        188
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x533"
    },
    "508": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "jump": "i",
      "offset": [
        159,
        188
      ],
      "op": "JUMP",
      "path": "4"
    },
    "509": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        159,
        188
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "510": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        159,
        188
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x2E6"
    },
    "514": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "jump": "i",
      "offset": [
        159,
        188
      ],
      "op": "JUMP",
      "path": "4"
    },
    "515": {
      "offset": [
        290,
        327
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "516": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        290,
        327
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x16E"
    },
    "520": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        290,
        327
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x214"
    },
    "524": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        290,
        327
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "525": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        290,
        327
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "527": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        290,
        327
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x4C0"
    },
    "531": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "jump": "i",
      "offset": [
        290,
        327
      ],
      "op": "JUMP",
      "path": "4"
    },
    "532": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        290,
        327
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "533": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        290,
        327
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "535": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        290,
        327
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "537": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        290,
        327
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "538": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        290,
        327
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "540": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        290,
        327
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "541": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        290,
        327
      ],
      "op": "DUP2",
      "path": "4"
    },
    "542": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        290,
        327
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "543": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        290,
        327
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "545": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        290,
        327
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "546": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        290,
        327
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "547": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        290,
        327
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "548": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        290,
        327
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "550": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        290,
        327
      ],
      "op": "AND",
      "path": "4"
    },
    "551": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        290,
        327
      ],
      "op": "DUP2",
      "path": "4"
    },
    "552": {
      "fn": "CollectiveTruth.getAssetContractsMap",
      "offset": [
        290,
        327
      ],
      "op": "JUMP",
      "path": "4"
    },
    "553": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1530,
        1644
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "554": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1530,
        1644
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x1BB"
    },
    "558": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1530,
        1644
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x23A"
    },
    "562": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1530,
        1644
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "563": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1530,
        1644
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "565": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1530,
        1644
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x54D"
    },
    "569": {
      "fn": "CollectiveTruth.transferTokens",
      "jump": "i",
      "offset": [
        1530,
        1644
      ],
      "op": "JUMP",
      "path": "4"
    },
    "570": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1530,
        1644
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "571": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1530,
        1644
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x311"
    },
    "575": {
      "fn": "CollectiveTruth.transferTokens",
      "jump": "i",
      "offset": [
        1530,
        1644
      ],
      "op": "JUMP",
      "path": "4"
    },
    "576": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        883,
        1349
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "577": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        883,
        1349
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x1BB"
    },
    "581": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        883,
        1349
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x251"
    },
    "585": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        883,
        1349
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "586": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        883,
        1349
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "588": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        883,
        1349
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x625"
    },
    "592": {
      "fn": "CollectiveTruth.createAsset",
      "jump": "i",
      "offset": [
        883,
        1349
      ],
      "op": "JUMP",
      "path": "4"
    },
    "593": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        883,
        1349
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "594": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        883,
        1349
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x391"
    },
    "598": {
      "fn": "CollectiveTruth.createAsset",
      "jump": "i",
      "offset": [
        883,
        1349
      ],
      "op": "JUMP",
      "path": "4"
    },
    "599": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        699,
        875
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "600": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        699,
        875
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x1BB"
    },
    "604": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        699,
        875
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x268"
    },
    "608": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        699,
        875
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "609": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        699,
        875
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "611": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        699,
        875
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x54D"
    },
    "615": {
      "fn": "CollectiveTruth.registerUser",
      "jump": "i",
      "offset": [
        699,
        875
      ],
      "op": "JUMP",
      "path": "4"
    },
    "616": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        699,
        875
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "617": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        699,
        875
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x43E"
    },
    "621": {
      "fn": "CollectiveTruth.registerUser",
      "jump": "i",
      "offset": [
        699,
        875
      ],
      "op": "JUMP",
      "path": "4"
    },
    "622": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1652,
        1778
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "623": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1752
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 3,
      "value": "0x2"
    },
    "625": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1752
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "626": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "628": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "629": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "634": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "636": {
      "op": "SHL"
    },
    "637": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "DUP2",
      "path": "4"
    },
    "638": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "643": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "645": {
      "op": "SHL"
    },
    "646": {
      "op": "SUB"
    },
    "647": {
      "op": "DUP4"
    },
    "648": {
      "op": "DUP2"
    },
    "649": {
      "op": "AND"
    },
    "650": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "652": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "DUP4",
      "path": "4"
    },
    "653": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "ADD",
      "path": "4"
    },
    "654": {
      "op": "MSTORE"
    },
    "655": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1714,
        1721
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "657": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1714,
        1721
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "658": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1752
      ],
      "op": "AND",
      "path": "4"
    },
    "659": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1752
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "660": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1762
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x70A08231"
    },
    "665": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1762
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "666": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "668": {
      "op": "ADD"
    },
    "669": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "671": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "673": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "674": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "DUP1",
      "path": "4"
    },
    "675": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "DUP4",
      "path": "4"
    },
    "676": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "SUB",
      "path": "4"
    },
    "677": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "DUP2",
      "path": "4"
    },
    "678": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "DUP7",
      "path": "4"
    },
    "679": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "GAS",
      "path": "4"
    },
    "680": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "STATICCALL",
      "path": "4"
    },
    "681": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "682": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "DUP1",
      "path": "4"
    },
    "683": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "684": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x2BA"
    },
    "688": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "689": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "690": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "692": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "DUP1",
      "path": "4"
    },
    "693": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "694": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "695": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "697": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "REVERT",
      "path": "4"
    },
    "698": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "699": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "POP",
      "path": "4"
    },
    "700": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "POP",
      "path": "4"
    },
    "701": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "POP",
      "path": "4"
    },
    "702": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "POP",
      "path": "4"
    },
    "703": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "705": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "706": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "707": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "709": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "NOT",
      "path": "4"
    },
    "710": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "712": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "DUP3",
      "path": "4"
    },
    "713": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "ADD",
      "path": "4"
    },
    "714": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "AND",
      "path": "4"
    },
    "715": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "DUP3",
      "path": "4"
    },
    "716": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "ADD",
      "path": "4"
    },
    "717": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "DUP1",
      "path": "4"
    },
    "718": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "720": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "721": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "POP",
      "path": "4"
    },
    "722": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "DUP2",
      "path": "4"
    },
    "723": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "ADD",
      "path": "4"
    },
    "724": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "725": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x2E0"
    },
    "729": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "730": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "731": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x6E4"
    },
    "735": {
      "fn": "CollectiveTruth.getTokenBalance",
      "jump": "i",
      "offset": [
        1741,
        1770
      ],
      "op": "JUMP",
      "path": "4"
    },
    "736": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1741,
        1770
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "737": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1734,
        1770
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "738": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        1652,
        1778
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "739": {
      "op": "POP"
    },
    "740": {
      "op": "POP"
    },
    "741": {
      "fn": "CollectiveTruth.getTokenBalance",
      "jump": "o",
      "offset": [
        1652,
        1778
      ],
      "op": "JUMP",
      "path": "4"
    },
    "742": {
      "offset": [
        159,
        188
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "743": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        159,
        188
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "745": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        159,
        188
      ],
      "op": "DUP2",
      "path": "4"
    },
    "746": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        159,
        188
      ],
      "op": "DUP2",
      "path": "4"
    },
    "747": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        159,
        188
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "748": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        159,
        188
      ],
      "op": "DUP2",
      "path": "4"
    },
    "749": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        159,
        188
      ],
      "op": "LT",
      "path": "4"
    },
    "750": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        159,
        188
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x2F7"
    },
    "754": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        159,
        188
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "755": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        159,
        188
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "757": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        159,
        188
      ],
      "op": "DUP1",
      "path": "4"
    },
    "758": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        159,
        188
      ],
      "op": "REVERT",
      "path": "4"
    },
    "759": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        159,
        188
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "760": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        159,
        188
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "762": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        159,
        188
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "763": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        159,
        188
      ],
      "op": "DUP3",
      "path": "4"
    },
    "764": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        159,
        188
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "765": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        159,
        188
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "767": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        159,
        188
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "768": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        159,
        188
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "769": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        159,
        188
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "770": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        159,
        188
      ],
      "op": "ADD",
      "path": "4"
    },
    "771": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        159,
        188
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "772": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "776": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "778": {
      "op": "SHL"
    },
    "779": {
      "op": "SUB"
    },
    "780": {
      "offset": [
        159,
        188
      ],
      "op": "AND",
      "path": "4"
    },
    "781": {
      "fn": "CollectiveTruth.getTokenBalance",
      "offset": [
        159,
        188
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "782": {
      "op": "POP"
    },
    "783": {
      "offset": [
        159,
        188
      ],
      "op": "DUP2",
      "path": "4"
    },
    "784": {
      "fn": "CollectiveTruth.getTokenBalance",
      "jump": "o",
      "offset": [
        159,
        188
      ],
      "op": "JUMP",
      "path": "4"
    },
    "785": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1530,
        1644
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "786": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1613
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 4,
      "value": "0x2"
    },
    "788": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1613
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "789": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "791": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "792": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "797": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "799": {
      "op": "SHL"
    },
    "800": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "DUP2",
      "path": "4"
    },
    "801": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "806": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "808": {
      "op": "SHL"
    },
    "809": {
      "op": "SUB"
    },
    "810": {
      "op": "DUP5"
    },
    "811": {
      "op": "DUP2"
    },
    "812": {
      "op": "AND"
    },
    "813": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "815": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "DUP4",
      "path": "4"
    },
    "816": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "ADD",
      "path": "4"
    },
    "817": {
      "op": "MSTORE"
    },
    "818": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "820": {
      "op": "DUP3"
    },
    "821": {
      "op": "ADD"
    },
    "822": {
      "op": "DUP5"
    },
    "823": {
      "op": "SWAP1"
    },
    "824": {
      "op": "MSTORE"
    },
    "825": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1613
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "826": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1613
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "827": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1613
      ],
      "op": "AND",
      "path": "4"
    },
    "828": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1613
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "829": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1622
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA9059CBB"
    },
    "834": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1622
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "835": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "837": {
      "op": "ADD"
    },
    "838": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "839": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "841": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "843": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "844": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "DUP1",
      "path": "4"
    },
    "845": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "DUP4",
      "path": "4"
    },
    "846": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "SUB",
      "path": "4"
    },
    "847": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "DUP2",
      "path": "4"
    },
    "848": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "850": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "DUP8",
      "path": "4"
    },
    "851": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "GAS",
      "path": "4"
    },
    "852": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "CALL",
      "path": "4"
    },
    "853": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "854": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "DUP1",
      "path": "4"
    },
    "855": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "856": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x366"
    },
    "860": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "861": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "862": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "864": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "DUP1",
      "path": "4"
    },
    "865": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "866": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "867": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "869": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "REVERT",
      "path": "4"
    },
    "870": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "871": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "POP",
      "path": "4"
    },
    "872": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "POP",
      "path": "4"
    },
    "873": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "POP",
      "path": "4"
    },
    "874": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "POP",
      "path": "4"
    },
    "875": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "877": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "878": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "879": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "881": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "NOT",
      "path": "4"
    },
    "882": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "884": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "DUP3",
      "path": "4"
    },
    "885": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "ADD",
      "path": "4"
    },
    "886": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "AND",
      "path": "4"
    },
    "887": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "DUP3",
      "path": "4"
    },
    "888": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "ADD",
      "path": "4"
    },
    "889": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "DUP1",
      "path": "4"
    },
    "890": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "892": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "893": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "POP",
      "path": "4"
    },
    "894": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "DUP2",
      "path": "4"
    },
    "895": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "ADD",
      "path": "4"
    },
    "896": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "897": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x38C"
    },
    "901": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "902": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "903": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x6FE"
    },
    "907": {
      "fn": "CollectiveTruth.transferTokens",
      "jump": "i",
      "offset": [
        1602,
        1636
      ],
      "op": "JUMP",
      "path": "4"
    },
    "908": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "909": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1602,
        1636
      ],
      "op": "POP",
      "path": "4"
    },
    "910": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1530,
        1644
      ],
      "op": "POP",
      "path": "4"
    },
    "911": {
      "fn": "CollectiveTruth.transferTokens",
      "offset": [
        1530,
        1644
      ],
      "op": "POP",
      "path": "4"
    },
    "912": {
      "fn": "CollectiveTruth.transferTokens",
      "jump": "o",
      "offset": [
        1530,
        1644
      ],
      "op": "JUMP",
      "path": "4"
    },
    "913": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        883,
        1349
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "914": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1082,
        1099
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "916": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1126,
        1135
      ],
      "op": "DUP6",
      "path": "4"
    },
    "917": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1150,
        1155
      ],
      "op": "DUP6",
      "path": "4"
    },
    "918": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1170,
        1177
      ],
      "op": "DUP6",
      "path": "4"
    },
    "919": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1192,
        1201
      ],
      "op": "DUP6",
      "path": "4"
    },
    "920": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1216,
        1225
      ],
      "op": "DUP6",
      "path": "4"
    },
    "921": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1102,
        1236
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "923": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1102,
        1236
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "924": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1102,
        1236
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x3A6"
    },
    "928": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1102,
        1236
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "929": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1102,
        1236
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x495"
    },
    "933": {
      "fn": "CollectiveTruth.createAsset",
      "jump": "i",
      "offset": [
        1102,
        1236
      ],
      "op": "JUMP",
      "path": "4"
    },
    "934": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1102,
        1236
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "935": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1102,
        1236
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x3B6"
    },
    "939": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1102,
        1236
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "940": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1102,
        1236
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "941": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1102,
        1236
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "942": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1102,
        1236
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "943": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1102,
        1236
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "944": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1102,
        1236
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "945": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1102,
        1236
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x76E"
    },
    "949": {
      "fn": "CollectiveTruth.createAsset",
      "jump": "i",
      "offset": [
        1102,
        1236
      ],
      "op": "JUMP",
      "path": "4"
    },
    "950": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1102,
        1236
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "951": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1102,
        1236
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "953": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1102,
        1236
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "954": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1102,
        1236
      ],
      "op": "DUP1",
      "path": "4"
    },
    "955": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1102,
        1236
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "956": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1102,
        1236
      ],
      "op": "SUB",
      "path": "4"
    },
    "957": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1102,
        1236
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "958": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1102,
        1236
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "960": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1102,
        1236
      ],
      "op": "CREATE",
      "path": "4"
    },
    "961": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1102,
        1236
      ],
      "op": "DUP1",
      "path": "4"
    },
    "962": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1102,
        1236
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "963": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1102,
        1236
      ],
      "op": "DUP1",
      "path": "4"
    },
    "964": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1102,
        1236
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "965": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1102,
        1236
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x3D3"
    },
    "969": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1102,
        1236
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "970": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1102,
        1236
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "971": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1102,
        1236
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "973": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1102,
        1236
      ],
      "op": "DUP1",
      "path": "4"
    },
    "974": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1102,
        1236
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "975": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1102,
        1236
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "976": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1102,
        1236
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "978": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1102,
        1236
      ],
      "op": "REVERT",
      "path": "4"
    },
    "979": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1102,
        1236
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "980": {
      "op": "POP"
    },
    "981": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1247,
        1261
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 5,
      "value": "0x0"
    },
    "983": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1247,
        1279
      ],
      "op": "DUP1",
      "path": "4"
    },
    "984": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1247,
        1279
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "985": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1247,
        1279
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "987": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1247,
        1279
      ],
      "op": "DUP2",
      "path": "4"
    },
    "988": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1247,
        1279
      ],
      "op": "DUP2",
      "path": "4"
    },
    "989": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1247,
        1279
      ],
      "op": "ADD",
      "path": "4"
    },
    "990": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1247,
        1279
      ],
      "op": "DUP4",
      "path": "4"
    },
    "991": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1247,
        1279
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "992": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1247,
        1279
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563"
    },
    "1025": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1247,
        1279
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1026": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1247,
        1279
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1027": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1247,
        1279
      ],
      "op": "ADD",
      "path": "4"
    },
    "1028": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1247,
        1279
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1029": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1247,
        1279
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1030": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1034": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1036": {
      "op": "SHL"
    },
    "1037": {
      "op": "SUB"
    },
    "1038": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1247,
        1279
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "1039": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1247,
        1279
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1040": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1247,
        1279
      ],
      "op": "AND",
      "path": "4"
    },
    "1041": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1045": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1047": {
      "op": "SHL"
    },
    "1048": {
      "op": "SUB"
    },
    "1049": {
      "op": "NOT"
    },
    "1050": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1247,
        1279
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1051": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1247,
        1279
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1052": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1247,
        1279
      ],
      "op": "AND",
      "path": "4"
    },
    "1053": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1247,
        1279
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1054": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1247,
        1279
      ],
      "op": "OR",
      "path": "4"
    },
    "1055": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1247,
        1279
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1056": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1247,
        1279
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1057": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1247,
        1279
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1058": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1290,
        1318
      ],
      "op": "SWAP10",
      "path": "4",
      "statement": 6
    },
    "1059": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1290,
        1318
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1060": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1290,
        1318
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1061": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1290,
        1318
      ],
      "op": "AND",
      "path": "4"
    },
    "1062": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1290,
        1318
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1063": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1290,
        1318
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1064": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1247,
        1279
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1066": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1290,
        1318
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1067": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1290,
        1318
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1069": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1290,
        1318
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1070": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1290,
        1318
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1071": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1290,
        1341
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1072": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1290,
        1341
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1073": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1290,
        1341
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1074": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1290,
        1341
      ],
      "op": "SWAP8",
      "path": "4"
    },
    "1075": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1290,
        1341
      ],
      "op": "AND",
      "path": "4"
    },
    "1076": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1290,
        1341
      ],
      "op": "OR",
      "path": "4"
    },
    "1077": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1290,
        1341
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1078": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1290,
        1341
      ],
      "op": "SWAP6",
      "path": "4"
    },
    "1079": {
      "fn": "CollectiveTruth.createAsset",
      "offset": [
        1290,
        1341
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1080": {
      "op": "POP"
    },
    "1081": {
      "op": "POP"
    },
    "1082": {
      "op": "POP"
    },
    "1083": {
      "op": "POP"
    },
    "1084": {
      "op": "POP"
    },
    "1085": {
      "fn": "CollectiveTruth.createAsset",
      "jump": "o",
      "offset": [
        883,
        1349
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1086": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        699,
        875
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1091": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1093": {
      "op": "SHL"
    },
    "1094": {
      "op": "SUB"
    },
    "1095": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        788,
        803
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 7
    },
    "1096": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        788,
        803
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1097": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        788,
        803
      ],
      "op": "AND",
      "path": "4"
    },
    "1098": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        788,
        803
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1100": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        788,
        803
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1101": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        788,
        803
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1102": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        788,
        803
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1103": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        788,
        793
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "1105": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        788,
        803
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1107": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        788,
        803
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1108": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        788,
        803
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1110": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        788,
        803
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1111": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        788,
        803
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1112": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        788,
        803
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1113": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        788,
        803
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1114": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        788,
        810
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1115": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        788,
        810
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1116": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1118": {
      "op": "NOT"
    },
    "1119": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        788,
        810
      ],
      "op": "AND",
      "path": "4"
    },
    "1120": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        806,
        810
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1122": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        788,
        810
      ],
      "op": "OR",
      "path": "4"
    },
    "1123": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        788,
        810
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1124": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        788,
        810
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1125": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        821,
        832
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 8,
      "value": "0x2"
    },
    "1127": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        821,
        832
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1128": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        821,
        867
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1129": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        821,
        867
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1130": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1135": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1137": {
      "op": "SHL"
    },
    "1138": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        821,
        867
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1139": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        821,
        867
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1140": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        821,
        867
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1142": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        821,
        867
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1143": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        821,
        867
      ],
      "op": "ADD",
      "path": "4"
    },
    "1144": {
      "op": "SWAP3"
    },
    "1145": {
      "op": "SWAP1"
    },
    "1146": {
      "op": "SWAP3"
    },
    "1147": {
      "op": "MSTORE"
    },
    "1148": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1150": {
      "op": "DUP3"
    },
    "1151": {
      "op": "ADD"
    },
    "1152": {
      "op": "DUP5"
    },
    "1153": {
      "op": "SWAP1"
    },
    "1154": {
      "op": "MSTORE"
    },
    "1155": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        821,
        832
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1156": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        821,
        832
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1157": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        821,
        832
      ],
      "op": "AND",
      "path": "4"
    },
    "1158": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        821,
        832
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1159": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        821,
        841
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA9059CBB"
    },
    "1164": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        821,
        841
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1165": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1167": {
      "op": "ADD"
    },
    "1168": {
      "fn": "CollectiveTruth.registerUser",
      "offset": [
        821,
        867
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x346"
    },
    "1172": {
      "op": "JUMP"
    },
    "1173": {
      "op": "JUMPDEST"
    },
    "1174": {
      "op": "PUSH2",
      "value": "0x140B"
    },
    "1177": {
      "op": "DUP1"
    },
    "1178": {
      "op": "PUSH3",
      "value": "0x7F1"
    },
    "1182": {
      "op": "DUP4"
    },
    "1183": {
      "op": "CODECOPY"
    },
    "1184": {
      "op": "ADD"
    },
    "1185": {
      "op": "SWAP1"
    },
    "1186": {
      "jump": "o",
      "op": "JUMP"
    },
    "1187": {
      "op": "JUMPDEST"
    },
    "1188": {
      "op": "DUP1"
    },
    "1189": {
      "op": "CALLDATALOAD"
    },
    "1190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1194": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1196": {
      "op": "SHL"
    },
    "1197": {
      "op": "SUB"
    },
    "1198": {
      "op": "DUP2"
    },
    "1199": {
      "op": "AND"
    },
    "1200": {
      "op": "DUP2"
    },
    "1201": {
      "op": "EQ"
    },
    "1202": {
      "op": "PUSH3",
      "value": "0x4BB"
    },
    "1206": {
      "op": "JUMPI"
    },
    "1207": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1209": {
      "op": "DUP1"
    },
    "1210": {
      "op": "REVERT"
    },
    "1211": {
      "op": "JUMPDEST"
    },
    "1212": {
      "op": "SWAP2"
    },
    "1213": {
      "op": "SWAP1"
    },
    "1214": {
      "op": "POP"
    },
    "1215": {
      "jump": "o",
      "op": "JUMP"
    },
    "1216": {
      "op": "JUMPDEST"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1219": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1221": {
      "op": "DUP3"
    },
    "1222": {
      "op": "DUP5"
    },
    "1223": {
      "op": "SUB"
    },
    "1224": {
      "op": "SLT"
    },
    "1225": {
      "op": "ISZERO"
    },
    "1226": {
      "op": "PUSH3",
      "value": "0x4D3"
    },
    "1230": {
      "op": "JUMPI"
    },
    "1231": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1233": {
      "op": "DUP1"
    },
    "1234": {
      "op": "REVERT"
    },
    "1235": {
      "op": "JUMPDEST"
    },
    "1236": {
      "op": "PUSH3",
      "value": "0x4DE"
    },
    "1240": {
      "op": "DUP3"
    },
    "1241": {
      "op": "PUSH3",
      "value": "0x4A3"
    },
    "1245": {
      "jump": "i",
      "op": "JUMP"
    },
    "1246": {
      "op": "JUMPDEST"
    },
    "1247": {
      "op": "SWAP4"
    },
    "1248": {
      "op": "SWAP3"
    },
    "1249": {
      "op": "POP"
    },
    "1250": {
      "op": "POP"
    },
    "1251": {
      "op": "POP"
    },
    "1252": {
      "jump": "o",
      "op": "JUMP"
    },
    "1253": {
      "op": "JUMPDEST"
    },
    "1254": {
      "op": "DUP1"
    },
    "1255": {
      "op": "ISZERO"
    },
    "1256": {
      "op": "ISZERO"
    },
    "1257": {
      "op": "DUP2"
    },
    "1258": {
      "op": "EQ"
    },
    "1259": {
      "op": "PUSH3",
      "value": "0x4F4"
    },
    "1263": {
      "op": "JUMPI"
    },
    "1264": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1266": {
      "op": "DUP1"
    },
    "1267": {
      "op": "REVERT"
    },
    "1268": {
      "op": "JUMPDEST"
    },
    "1269": {
      "op": "POP"
    },
    "1270": {
      "jump": "o",
      "op": "JUMP"
    },
    "1271": {
      "op": "JUMPDEST"
    },
    "1272": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1274": {
      "op": "DUP1"
    },
    "1275": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1277": {
      "op": "DUP4"
    },
    "1278": {
      "op": "DUP6"
    },
    "1279": {
      "op": "SUB"
    },
    "1280": {
      "op": "SLT"
    },
    "1281": {
      "op": "ISZERO"
    },
    "1282": {
      "op": "PUSH3",
      "value": "0x50B"
    },
    "1286": {
      "op": "JUMPI"
    },
    "1287": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1289": {
      "op": "DUP1"
    },
    "1290": {
      "op": "REVERT"
    },
    "1291": {
      "op": "JUMPDEST"
    },
    "1292": {
      "op": "PUSH3",
      "value": "0x516"
    },
    "1296": {
      "op": "DUP4"
    },
    "1297": {
      "op": "PUSH3",
      "value": "0x4A3"
    },
    "1301": {
      "jump": "i",
      "op": "JUMP"
    },
    "1302": {
      "op": "JUMPDEST"
    },
    "1303": {
      "op": "SWAP2"
    },
    "1304": {
      "op": "POP"
    },
    "1305": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1307": {
      "op": "DUP4"
    },
    "1308": {
      "op": "ADD"
    },
    "1309": {
      "op": "CALLDATALOAD"
    },
    "1310": {
      "op": "PUSH3",
      "value": "0x528"
    },
    "1314": {
      "op": "DUP2"
    },
    "1315": {
      "op": "PUSH3",
      "value": "0x4E5"
    },
    "1319": {
      "jump": "i",
      "op": "JUMP"
    },
    "1320": {
      "op": "JUMPDEST"
    },
    "1321": {
      "op": "DUP1"
    },
    "1322": {
      "op": "SWAP2"
    },
    "1323": {
      "op": "POP"
    },
    "1324": {
      "op": "POP"
    },
    "1325": {
      "op": "SWAP3"
    },
    "1326": {
      "op": "POP"
    },
    "1327": {
      "op": "SWAP3"
    },
    "1328": {
      "op": "SWAP1"
    },
    "1329": {
      "op": "POP"
    },
    "1330": {
      "jump": "o",
      "op": "JUMP"
    },
    "1331": {
      "op": "JUMPDEST"
    },
    "1332": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1334": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1336": {
      "op": "DUP3"
    },
    "1337": {
      "op": "DUP5"
    },
    "1338": {
      "op": "SUB"
    },
    "1339": {
      "op": "SLT"
    },
    "1340": {
      "op": "ISZERO"
    },
    "1341": {
      "op": "PUSH3",
      "value": "0x546"
    },
    "1345": {
      "op": "JUMPI"
    },
    "1346": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1348": {
      "op": "DUP1"
    },
    "1349": {
      "op": "REVERT"
    },
    "1350": {
      "op": "JUMPDEST"
    },
    "1351": {
      "op": "POP"
    },
    "1352": {
      "op": "CALLDATALOAD"
    },
    "1353": {
      "op": "SWAP2"
    },
    "1354": {
      "op": "SWAP1"
    },
    "1355": {
      "op": "POP"
    },
    "1356": {
      "jump": "o",
      "op": "JUMP"
    },
    "1357": {
      "op": "JUMPDEST"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1360": {
      "op": "DUP1"
    },
    "1361": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1363": {
      "op": "DUP4"
    },
    "1364": {
      "op": "DUP6"
    },
    "1365": {
      "op": "SUB"
    },
    "1366": {
      "op": "SLT"
    },
    "1367": {
      "op": "ISZERO"
    },
    "1368": {
      "op": "PUSH3",
      "value": "0x561"
    },
    "1372": {
      "op": "JUMPI"
    },
    "1373": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1375": {
      "op": "DUP1"
    },
    "1376": {
      "op": "REVERT"
    },
    "1377": {
      "op": "JUMPDEST"
    },
    "1378": {
      "op": "PUSH3",
      "value": "0x56C"
    },
    "1382": {
      "op": "DUP4"
    },
    "1383": {
      "op": "PUSH3",
      "value": "0x4A3"
    },
    "1387": {
      "jump": "i",
      "op": "JUMP"
    },
    "1388": {
      "op": "JUMPDEST"
    },
    "1389": {
      "op": "SWAP5"
    },
    "1390": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1392": {
      "op": "SWAP4"
    },
    "1393": {
      "op": "SWAP1"
    },
    "1394": {
      "op": "SWAP4"
    },
    "1395": {
      "op": "ADD"
    },
    "1396": {
      "op": "CALLDATALOAD"
    },
    "1397": {
      "op": "SWAP4"
    },
    "1398": {
      "op": "POP"
    },
    "1399": {
      "op": "POP"
    },
    "1400": {
      "op": "POP"
    },
    "1401": {
      "jump": "o",
      "op": "JUMP"
    },
    "1402": {
      "op": "JUMPDEST"
    },
    "1403": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1410": {
      "op": "SHL"
    },
    "1411": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1413": {
      "op": "MSTORE"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "1416": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1418": {
      "op": "MSTORE"
    },
    "1419": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1421": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1423": {
      "op": "REVERT"
    },
    "1424": {
      "op": "JUMPDEST"
    },
    "1425": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1427": {
      "op": "DUP3"
    },
    "1428": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1430": {
      "op": "DUP4"
    },
    "1431": {
      "op": "ADD"
    },
    "1432": {
      "op": "SLT"
    },
    "1433": {
      "op": "PUSH3",
      "value": "0x5A2"
    },
    "1437": {
      "op": "JUMPI"
    },
    "1438": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1440": {
      "op": "DUP1"
    },
    "1441": {
      "op": "REVERT"
    },
    "1442": {
      "op": "JUMPDEST"
    },
    "1443": {
      "op": "DUP2"
    },
    "1444": {
      "op": "CALLDATALOAD"
    },
    "1445": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1454": {
      "op": "DUP1"
    },
    "1455": {
      "op": "DUP3"
    },
    "1456": {
      "op": "GT"
    },
    "1457": {
      "op": "ISZERO"
    },
    "1458": {
      "op": "PUSH3",
      "value": "0x5C0"
    },
    "1462": {
      "op": "JUMPI"
    },
    "1463": {
      "op": "PUSH3",
      "value": "0x5C0"
    },
    "1467": {
      "op": "PUSH3",
      "value": "0x57A"
    },
    "1471": {
      "jump": "i",
      "op": "JUMP"
    },
    "1472": {
      "op": "JUMPDEST"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1475": {
      "op": "MLOAD"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1478": {
      "op": "DUP4"
    },
    "1479": {
      "op": "ADD"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1482": {
      "op": "NOT"
    },
    "1483": {
      "op": "SWAP1"
    },
    "1484": {
      "op": "DUP2"
    },
    "1485": {
      "op": "AND"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "1488": {
      "op": "ADD"
    },
    "1489": {
      "op": "AND"
    },
    "1490": {
      "op": "DUP2"
    },
    "1491": {
      "op": "ADD"
    },
    "1492": {
      "op": "SWAP1"
    },
    "1493": {
      "op": "DUP3"
    },
    "1494": {
      "op": "DUP3"
    },
    "1495": {
      "op": "GT"
    },
    "1496": {
      "op": "DUP2"
    },
    "1497": {
      "op": "DUP4"
    },
    "1498": {
      "op": "LT"
    },
    "1499": {
      "op": "OR"
    },
    "1500": {
      "op": "ISZERO"
    },
    "1501": {
      "op": "PUSH3",
      "value": "0x5EB"
    },
    "1505": {
      "op": "JUMPI"
    },
    "1506": {
      "op": "PUSH3",
      "value": "0x5EB"
    },
    "1510": {
      "op": "PUSH3",
      "value": "0x57A"
    },
    "1514": {
      "jump": "i",
      "op": "JUMP"
    },
    "1515": {
      "op": "JUMPDEST"
    },
    "1516": {
      "op": "DUP2"
    },
    "1517": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1519": {
      "op": "MSTORE"
    },
    "1520": {
      "op": "DUP4"
    },
    "1521": {
      "op": "DUP2"
    },
    "1522": {
      "op": "MSTORE"
    },
    "1523": {
      "op": "DUP7"
    },
    "1524": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1526": {
      "op": "DUP6"
    },
    "1527": {
      "op": "DUP9"
    },
    "1528": {
      "op": "ADD"
    },
    "1529": {
      "op": "ADD"
    },
    "1530": {
      "op": "GT"
    },
    "1531": {
      "op": "ISZERO"
    },
    "1532": {
      "op": "PUSH3",
      "value": "0x605"
    },
    "1536": {
      "op": "JUMPI"
    },
    "1537": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1539": {
      "op": "DUP1"
    },
    "1540": {
      "op": "REVERT"
    },
    "1541": {
      "op": "JUMPDEST"
    },
    "1542": {
      "op": "DUP4"
    },
    "1543": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1545": {
      "op": "DUP8"
    },
    "1546": {
      "op": "ADD"
    },
    "1547": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1549": {
      "op": "DUP4"
    },
    "1550": {
      "op": "ADD"
    },
    "1551": {
      "op": "CALLDATACOPY"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1554": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1556": {
      "op": "DUP6"
    },
    "1557": {
      "op": "DUP4"
    },
    "1558": {
      "op": "ADD"
    },
    "1559": {
      "op": "ADD"
    },
    "1560": {
      "op": "MSTORE"
    },
    "1561": {
      "op": "DUP1"
    },
    "1562": {
      "op": "SWAP5"
    },
    "1563": {
      "op": "POP"
    },
    "1564": {
      "op": "POP"
    },
    "1565": {
      "op": "POP"
    },
    "1566": {
      "op": "POP"
    },
    "1567": {
      "op": "POP"
    },
    "1568": {
      "op": "SWAP3"
    },
    "1569": {
      "op": "SWAP2"
    },
    "1570": {
      "op": "POP"
    },
    "1571": {
      "op": "POP"
    },
    "1572": {
      "jump": "o",
      "op": "JUMP"
    },
    "1573": {
      "op": "JUMPDEST"
    },
    "1574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1576": {
      "op": "DUP1"
    },
    "1577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1579": {
      "op": "DUP1"
    },
    "1580": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1582": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1584": {
      "op": "DUP7"
    },
    "1585": {
      "op": "DUP9"
    },
    "1586": {
      "op": "SUB"
    },
    "1587": {
      "op": "SLT"
    },
    "1588": {
      "op": "ISZERO"
    },
    "1589": {
      "op": "PUSH3",
      "value": "0x63E"
    },
    "1593": {
      "op": "JUMPI"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1596": {
      "op": "DUP1"
    },
    "1597": {
      "op": "REVERT"
    },
    "1598": {
      "op": "JUMPDEST"
    },
    "1599": {
      "op": "PUSH3",
      "value": "0x649"
    },
    "1603": {
      "op": "DUP7"
    },
    "1604": {
      "op": "PUSH3",
      "value": "0x4A3"
    },
    "1608": {
      "jump": "i",
      "op": "JUMP"
    },
    "1609": {
      "op": "JUMPDEST"
    },
    "1610": {
      "op": "SWAP5"
    },
    "1611": {
      "op": "POP"
    },
    "1612": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1614": {
      "op": "DUP7"
    },
    "1615": {
      "op": "ADD"
    },
    "1616": {
      "op": "CALLDATALOAD"
    },
    "1617": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1626": {
      "op": "DUP1"
    },
    "1627": {
      "op": "DUP3"
    },
    "1628": {
      "op": "GT"
    },
    "1629": {
      "op": "ISZERO"
    },
    "1630": {
      "op": "PUSH3",
      "value": "0x667"
    },
    "1634": {
      "op": "JUMPI"
    },
    "1635": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1637": {
      "op": "DUP1"
    },
    "1638": {
      "op": "REVERT"
    },
    "1639": {
      "op": "JUMPDEST"
    },
    "1640": {
      "op": "PUSH3",
      "value": "0x675"
    },
    "1644": {
      "op": "DUP10"
    },
    "1645": {
      "op": "DUP4"
    },
    "1646": {
      "op": "DUP11"
    },
    "1647": {
      "op": "ADD"
    },
    "1648": {
      "op": "PUSH3",
      "value": "0x590"
    },
    "1652": {
      "jump": "i",
      "op": "JUMP"
    },
    "1653": {
      "op": "JUMPDEST"
    },
    "1654": {
      "op": "SWAP6"
    },
    "1655": {
      "op": "POP"
    },
    "1656": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1658": {
      "op": "DUP9"
    },
    "1659": {
      "op": "ADD"
    },
    "1660": {
      "op": "CALLDATALOAD"
    },
    "1661": {
      "op": "SWAP2"
    },
    "1662": {
      "op": "POP"
    },
    "1663": {
      "op": "DUP1"
    },
    "1664": {
      "op": "DUP3"
    },
    "1665": {
      "op": "GT"
    },
    "1666": {
      "op": "ISZERO"
    },
    "1667": {
      "op": "PUSH3",
      "value": "0x68C"
    },
    "1671": {
      "op": "JUMPI"
    },
    "1672": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1674": {
      "op": "DUP1"
    },
    "1675": {
      "op": "REVERT"
    },
    "1676": {
      "op": "JUMPDEST"
    },
    "1677": {
      "op": "PUSH3",
      "value": "0x69A"
    },
    "1681": {
      "op": "DUP10"
    },
    "1682": {
      "op": "DUP4"
    },
    "1683": {
      "op": "DUP11"
    },
    "1684": {
      "op": "ADD"
    },
    "1685": {
      "op": "PUSH3",
      "value": "0x590"
    },
    "1689": {
      "jump": "i",
      "op": "JUMP"
    },
    "1690": {
      "op": "JUMPDEST"
    },
    "1691": {
      "op": "SWAP5"
    },
    "1692": {
      "op": "POP"
    },
    "1693": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1695": {
      "op": "DUP9"
    },
    "1696": {
      "op": "ADD"
    },
    "1697": {
      "op": "CALLDATALOAD"
    },
    "1698": {
      "op": "SWAP2"
    },
    "1699": {
      "op": "POP"
    },
    "1700": {
      "op": "DUP1"
    },
    "1701": {
      "op": "DUP3"
    },
    "1702": {
      "op": "GT"
    },
    "1703": {
      "op": "ISZERO"
    },
    "1704": {
      "op": "PUSH3",
      "value": "0x6B1"
    },
    "1708": {
      "op": "JUMPI"
    },
    "1709": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1711": {
      "op": "DUP1"
    },
    "1712": {
      "op": "REVERT"
    },
    "1713": {
      "op": "JUMPDEST"
    },
    "1714": {
      "op": "POP"
    },
    "1715": {
      "op": "PUSH3",
      "value": "0x6C0"
    },
    "1719": {
      "op": "DUP9"
    },
    "1720": {
      "op": "DUP3"
    },
    "1721": {
      "op": "DUP10"
    },
    "1722": {
      "op": "ADD"
    },
    "1723": {
      "op": "PUSH3",
      "value": "0x590"
    },
    "1727": {
      "jump": "i",
      "op": "JUMP"
    },
    "1728": {
      "op": "JUMPDEST"
    },
    "1729": {
      "op": "SWAP3"
    },
    "1730": {
      "op": "POP"
    },
    "1731": {
      "op": "POP"
    },
    "1732": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1734": {
      "op": "DUP7"
    },
    "1735": {
      "op": "ADD"
    },
    "1736": {
      "op": "CALLDATALOAD"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "1739": {
      "op": "DUP2"
    },
    "1740": {
      "op": "LT"
    },
    "1741": {
      "op": "PUSH3",
      "value": "0x6D6"
    },
    "1745": {
      "op": "JUMPI"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1748": {
      "op": "DUP1"
    },
    "1749": {
      "op": "REVERT"
    },
    "1750": {
      "op": "JUMPDEST"
    },
    "1751": {
      "op": "DUP1"
    },
    "1752": {
      "op": "SWAP2"
    },
    "1753": {
      "op": "POP"
    },
    "1754": {
      "op": "POP"
    },
    "1755": {
      "op": "SWAP3"
    },
    "1756": {
      "op": "SWAP6"
    },
    "1757": {
      "op": "POP"
    },
    "1758": {
      "op": "SWAP3"
    },
    "1759": {
      "op": "SWAP6"
    },
    "1760": {
      "op": "SWAP1"
    },
    "1761": {
      "op": "SWAP4"
    },
    "1762": {
      "op": "POP"
    },
    "1763": {
      "jump": "o",
      "op": "JUMP"
    },
    "1764": {
      "op": "JUMPDEST"
    },
    "1765": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1767": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1769": {
      "op": "DUP3"
    },
    "1770": {
      "op": "DUP5"
    },
    "1771": {
      "op": "SUB"
    },
    "1772": {
      "op": "SLT"
    },
    "1773": {
      "op": "ISZERO"
    },
    "1774": {
      "op": "PUSH3",
      "value": "0x6F7"
    },
    "1778": {
      "op": "JUMPI"
    },
    "1779": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1781": {
      "op": "DUP1"
    },
    "1782": {
      "op": "REVERT"
    },
    "1783": {
      "op": "JUMPDEST"
    },
    "1784": {
      "op": "POP"
    },
    "1785": {
      "op": "MLOAD"
    },
    "1786": {
      "op": "SWAP2"
    },
    "1787": {
      "op": "SWAP1"
    },
    "1788": {
      "op": "POP"
    },
    "1789": {
      "jump": "o",
      "op": "JUMP"
    },
    "1790": {
      "op": "JUMPDEST"
    },
    "1791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1793": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1795": {
      "op": "DUP3"
    },
    "1796": {
      "op": "DUP5"
    },
    "1797": {
      "op": "SUB"
    },
    "1798": {
      "op": "SLT"
    },
    "1799": {
      "op": "ISZERO"
    },
    "1800": {
      "op": "PUSH3",
      "value": "0x711"
    },
    "1804": {
      "op": "JUMPI"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1807": {
      "op": "DUP1"
    },
    "1808": {
      "op": "REVERT"
    },
    "1809": {
      "op": "JUMPDEST"
    },
    "1810": {
      "op": "DUP2"
    },
    "1811": {
      "op": "MLOAD"
    },
    "1812": {
      "op": "PUSH3",
      "value": "0x4DE"
    },
    "1816": {
      "op": "DUP2"
    },
    "1817": {
      "op": "PUSH3",
      "value": "0x4E5"
    },
    "1821": {
      "jump": "i",
      "op": "JUMP"
    },
    "1822": {
      "op": "JUMPDEST"
    },
    "1823": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1825": {
      "op": "DUP2"
    },
    "1826": {
      "op": "MLOAD"
    },
    "1827": {
      "op": "DUP1"
    },
    "1828": {
      "op": "DUP5"
    },
    "1829": {
      "op": "MSTORE"
    },
    "1830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1832": {
      "op": "JUMPDEST"
    },
    "1833": {
      "op": "DUP2"
    },
    "1834": {
      "op": "DUP2"
    },
    "1835": {
      "op": "LT"
    },
    "1836": {
      "op": "ISZERO"
    },
    "1837": {
      "op": "PUSH3",
      "value": "0x746"
    },
    "1841": {
      "op": "JUMPI"
    },
    "1842": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1844": {
      "op": "DUP2"
    },
    "1845": {
      "op": "DUP6"
    },
    "1846": {
      "op": "ADD"
    },
    "1847": {
      "op": "DUP2"
    },
    "1848": {
      "op": "ADD"
    },
    "1849": {
      "op": "MLOAD"
    },
    "1850": {
      "op": "DUP7"
    },
    "1851": {
      "op": "DUP4"
    },
    "1852": {
      "op": "ADD"
    },
    "1853": {
      "op": "DUP3"
    },
    "1854": {
      "op": "ADD"
    },
    "1855": {
      "op": "MSTORE"
    },
    "1856": {
      "op": "ADD"
    },
    "1857": {
      "op": "PUSH3",
      "value": "0x728"
    },
    "1861": {
      "op": "JUMP"
    },
    "1862": {
      "op": "JUMPDEST"
    },
    "1863": {
      "op": "DUP2"
    },
    "1864": {
      "op": "DUP2"
    },
    "1865": {
      "op": "GT"
    },
    "1866": {
      "op": "ISZERO"
    },
    "1867": {
      "op": "PUSH3",
      "value": "0x759"
    },
    "1871": {
      "op": "JUMPI"
    },
    "1872": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1874": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1876": {
      "op": "DUP4"
    },
    "1877": {
      "op": "DUP8"
    },
    "1878": {
      "op": "ADD"
    },
    "1879": {
      "op": "ADD"
    },
    "1880": {
      "op": "MSTORE"
    },
    "1881": {
      "op": "JUMPDEST"
    },
    "1882": {
      "op": "POP"
    },
    "1883": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1885": {
      "op": "ADD"
    },
    "1886": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1888": {
      "op": "NOT"
    },
    "1889": {
      "op": "AND"
    },
    "1890": {
      "op": "SWAP3"
    },
    "1891": {
      "op": "SWAP1"
    },
    "1892": {
      "op": "SWAP3"
    },
    "1893": {
      "op": "ADD"
    },
    "1894": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1896": {
      "op": "ADD"
    },
    "1897": {
      "op": "SWAP3"
    },
    "1898": {
      "op": "SWAP2"
    },
    "1899": {
      "op": "POP"
    },
    "1900": {
      "op": "POP"
    },
    "1901": {
      "jump": "o",
      "op": "JUMP"
    },
    "1902": {
      "op": "JUMPDEST"
    },
    "1903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1907": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1909": {
      "op": "SHL"
    },
    "1910": {
      "op": "SUB"
    },
    "1911": {
      "op": "DUP7"
    },
    "1912": {
      "op": "AND"
    },
    "1913": {
      "op": "DUP2"
    },
    "1914": {
      "op": "MSTORE"
    },
    "1915": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1919": {
      "op": "DUP3"
    },
    "1920": {
      "op": "ADD"
    },
    "1921": {
      "op": "DUP2"
    },
    "1922": {
      "op": "SWAP1"
    },
    "1923": {
      "op": "MSTORE"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1926": {
      "op": "SWAP1"
    },
    "1927": {
      "op": "PUSH3",
      "value": "0x794"
    },
    "1931": {
      "op": "SWAP1"
    },
    "1932": {
      "op": "DUP4"
    },
    "1933": {
      "op": "ADD"
    },
    "1934": {
      "op": "DUP8"
    },
    "1935": {
      "op": "PUSH3",
      "value": "0x71E"
    },
    "1939": {
      "jump": "i",
      "op": "JUMP"
    },
    "1940": {
      "op": "JUMPDEST"
    },
    "1941": {
      "op": "DUP3"
    },
    "1942": {
      "op": "DUP2"
    },
    "1943": {
      "op": "SUB"
    },
    "1944": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1946": {
      "op": "DUP5"
    },
    "1947": {
      "op": "ADD"
    },
    "1948": {
      "op": "MSTORE"
    },
    "1949": {
      "op": "PUSH3",
      "value": "0x7A8"
    },
    "1953": {
      "op": "DUP2"
    },
    "1954": {
      "op": "DUP8"
    },
    "1955": {
      "op": "PUSH3",
      "value": "0x71E"
    },
    "1959": {
      "jump": "i",
      "op": "JUMP"
    },
    "1960": {
      "op": "JUMPDEST"
    },
    "1961": {
      "op": "SWAP1"
    },
    "1962": {
      "op": "POP"
    },
    "1963": {
      "op": "DUP3"
    },
    "1964": {
      "op": "DUP2"
    },
    "1965": {
      "op": "SUB"
    },
    "1966": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1968": {
      "op": "DUP5"
    },
    "1969": {
      "op": "ADD"
    },
    "1970": {
      "op": "MSTORE"
    },
    "1971": {
      "op": "PUSH3",
      "value": "0x7BE"
    },
    "1975": {
      "op": "DUP2"
    },
    "1976": {
      "op": "DUP7"
    },
    "1977": {
      "op": "PUSH3",
      "value": "0x71E"
    },
    "1981": {
      "jump": "i",
      "op": "JUMP"
    },
    "1982": {
      "op": "JUMPDEST"
    },
    "1983": {
      "op": "SWAP2"
    },
    "1984": {
      "op": "POP"
    },
    "1985": {
      "op": "POP"
    },
    "1986": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "1988": {
      "op": "DUP4"
    },
    "1989": {
      "op": "LT"
    },
    "1990": {
      "op": "PUSH3",
      "value": "0x7E0"
    },
    "1994": {
      "op": "JUMPI"
    },
    "1995": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2000": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2002": {
      "op": "SHL"
    },
    "2003": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2005": {
      "op": "MSTORE"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2008": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2010": {
      "op": "MSTORE"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2013": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2015": {
      "op": "REVERT"
    },
    "2016": {
      "op": "JUMPDEST"
    },
    "2017": {
      "op": "DUP3"
    },
    "2018": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2020": {
      "op": "DUP4"
    },
    "2021": {
      "op": "ADD"
    },
    "2022": {
      "op": "MSTORE"
    },
    "2023": {
      "op": "SWAP7"
    },
    "2024": {
      "op": "SWAP6"
    },
    "2025": {
      "op": "POP"
    },
    "2026": {
      "op": "POP"
    },
    "2027": {
      "op": "POP"
    },
    "2028": {
      "op": "POP"
    },
    "2029": {
      "op": "POP"
    },
    "2030": {
      "op": "POP"
    },
    "2031": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "2e97a23d84326e2261fac3d235dfc4d619f8d832",
  "source": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity >=0.6.6 <0.9.0;\n\nimport \"./Asset.sol\";\nimport \"./TruthToken.sol\";\n\ncontract CollectiveTruth {\n    Asset[] public assetContracts;\n    mapping(address => address) public assetContractsMap;\n    TruthToken public truthTokens;\n    mapping(address => bool) public users; // later to be converted to an add=>add map for profile NFTs\n\n    constructor() {\n        truthTokens = new TruthToken(1614317 * 10**18);\n    }\n\n    function setUsers(address _address, bool flag) public {\n        users[_address] = flag;\n    }\n\n    function getUsers(address _address) public view returns (bool) {\n        return users[_address];\n    }\n\n    function registerUser(address _address,uint256 _initialTokens) public {        \n        users[_address] = true;\n        truthTokens.transfer(_address, _initialTokens);\n    }\n\n    function createAsset(\n        address _contract,\n        string memory _name,\n        string memory _symbol,\n        string memory _imageURL,\n        CATEGORY _category\n    ) public {\n        Asset newContract = new Asset(\n            _contract,\n            _name,\n            _symbol,\n            _imageURL,\n            _category\n        );\n        assetContracts.push(newContract);\n        assetContractsMap[_contract] = address(newContract);\n    }\n\n    function getAssetContractsMap(address _contract)\n        public\n        view\n        returns (address)\n    {\n        return assetContractsMap[_contract];\n    }\n\n    function transferTokens(address _to, uint256 _amount) public {\n        truthTokens.transfer(_to, _amount);\n    }\n\n    function getTokenBalance(address _owner) public view returns (uint256) {\n        return truthTokens.balanceOf(_owner);\n    }\n}\n",
  "sourceMap": "127:1654:4:-:0;;;397:79;;;;;;;;;;451:16;436:32;;;;;:::i;:::-;192:25:7;;;180:2;165:18;436:32:4;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;422:11:4;:46;;-1:-1:-1;;;;;;422:46:4;-1:-1:-1;;;;;422:46:4;;;;;;;;;;127:1654;;;;;;;;;;:::o;14:209:7:-;127:1654:4;;;;;;",
  "sourcePath": "contracts/CollectiveTruth.sol",
  "type": "contract"
}